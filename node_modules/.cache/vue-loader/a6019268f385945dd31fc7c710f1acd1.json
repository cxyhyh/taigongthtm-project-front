{"remainingRequest":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\mp-project\\taigongthtm-project-front\\src\\components\\yanzhengma.vue?vue&type=style&index=0&id=681f2311&scoped=true&lang=css&","dependencies":[{"path":"F:\\mp-project\\taigongthtm-project-front\\src\\components\\yanzhengma.vue","mtime":1640944908859},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1648453576759},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1648453593269},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\postcss-loader\\src\\index.js","mtime":1648453586195},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648453574266},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1648453593268}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnMtY2FudmFzIHsKICBoZWlnaHQ6IDM4cHg7Cn0KLnMtY2FudmFzIGNhbnZhcyB7CiAgbWFyZ2luLXRvcDogMXB4OwogIG1hcmdpbi1sZWZ0OiA4cHg7Cn0K"},{"version":3,"sources":["yanzhengma.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4JA;AACA;AACA;AACA;AACA;AACA;AACA","file":"yanzhengma.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"s-canvas\">\n    <canvas\n      id=\"s-canvas\"\n      :width=\"contentWidth\"\n      :height=\"contentHeight\"\n    ></canvas>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"SIdentify\",\n  props: {\n    identifyCode: {\n      type: String,\n      default: \"1234\",\n    },\n    fontSizeMin: {\n      type: Number,\n      default: 25,\n    },\n    fontSizeMax: {\n      type: Number,\n      default: 30,\n    },\n    backgroundColorMin: {\n      type: Number,\n      default: 255,\n    },\n    backgroundColorMax: {\n      type: Number,\n      default: 255,\n    },\n    colorMin: {\n      type: Number,\n      default: 0,\n    },\n    colorMax: {\n      type: Number,\n      default: 160,\n    },\n    lineColorMin: {\n      type: Number,\n      default: 100,\n    },\n    lineColorMax: {\n      type: Number,\n      default: 255,\n    },\n    dotColorMin: {\n      type: Number,\n      default: 0,\n    },\n    dotColorMax: {\n      type: Number,\n      default: 255,\n    },\n    contentWidth: {\n      type: Number,\n      default: 112,\n    },\n    contentHeight: {\n      type: Number,\n      default: 31,\n    },\n  },\n  methods: {\n    // 生成一个随机数\n    randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n    // 生成一个随机的颜色\n    randomColor(min, max) {\n      let r = this.randomNum(min, max);\n      let g = this.randomNum(min, max);\n      let b = this.randomNum(min, max);\n      return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n    },\n    drawPic() {\n      let canvas = document.getElementById(\"s-canvas\");\n      let ctx = canvas.getContext(\"2d\");\n      ctx.textBaseline = \"bottom\";\n      // 绘制背景\n      ctx.fillStyle = this.randomColor(\n        this.backgroundColorMin,\n        this.backgroundColorMax\n      );\n      ctx.fillRect(0, 0, this.contentWidth, this.contentHeight);\n      // 绘制文字\n      for (let i = 0; i < this.identifyCode.length; i++) {\n        this.drawText(ctx, this.identifyCode[i], i);\n      }\n      this.drawLine(ctx);\n      this.drawDot(ctx);\n    },\n    drawText(ctx, txt, i) {\n      ctx.fillStyle = this.randomColor(this.colorMin, this.colorMax);\n      ctx.font =\n        this.randomNum(this.fontSizeMin, this.fontSizeMax) + \"px SimHei\";\n      let x = (i + 1) * (this.contentWidth / (this.identifyCode.length + 1));\n      let y = this.randomNum(this.fontSizeMax, this.contentHeight - 5);\n      var deg = this.randomNum(-45, 45);\n      // 修改坐标原点和旋转角度\n      ctx.translate(x, y);\n      ctx.rotate((deg * Math.PI) / 180);\n      ctx.fillText(txt, 0, 0);\n      // 恢复坐标原点和旋转角度\n      ctx.rotate((-deg * Math.PI) / 180);\n      ctx.translate(-x, -y);\n    },\n    drawLine(ctx) {\n      // 绘制干扰线\n      for (let i = 0; i < 5; i++) {\n        ctx.strokeStyle = this.randomColor(\n          this.lineColorMin,\n          this.lineColorMax\n        );\n        ctx.beginPath();\n        ctx.moveTo(\n          this.randomNum(0, this.contentWidth),\n          this.randomNum(0, this.contentHeight)\n        );\n        ctx.lineTo(\n          this.randomNum(0, this.contentWidth),\n          this.randomNum(0, this.contentHeight)\n        );\n        ctx.stroke();\n      }\n    },\n    drawDot(ctx) {\n      // 绘制干扰点\n      for (let i = 0; i < 80; i++) {\n        ctx.fillStyle = this.randomColor(0, 255);\n        ctx.beginPath();\n        ctx.arc(\n          this.randomNum(0, this.contentWidth),\n          this.randomNum(0, this.contentHeight),\n          1,\n          0,\n          2 * Math.PI\n        );\n        ctx.fill();\n      }\n    },\n  },\n  watch: {\n    identifyCode() {\n      this.drawPic();\n    },\n  },\n  mounted() {\n    this.drawPic();\n  },\n};\n</script>\n<style scoped>\n.s-canvas {\n  height: 38px;\n}\n.s-canvas canvas {\n  margin-top: 1px;\n  margin-left: 8px;\n}\n</style>\n"]}]}