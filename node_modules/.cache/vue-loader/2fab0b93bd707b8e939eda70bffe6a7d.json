{"remainingRequest":"F:\\mygit\\front-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\mygit\\front-vue\\src\\views\\Pages\\echarts\\jobPie.vue?vue&type=style&index=0&id=155beeae&scoped=true&lang=css&","dependencies":[{"path":"F:\\mygit\\front-vue\\src\\views\\Pages\\echarts\\jobPie.vue","mtime":1629943402293},{"path":"F:\\mygit\\front-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\mygit\\front-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\mygit\\front-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\mygit\\front-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\mygit\\front-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQojbWFpbnsNCiAgY29sb3I6IHJnYigyMTQsIDM1LCAzNSk7DQp9DQo="},{"version":3,"sources":["jobPie.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqIA;AACA;AACA","file":"jobPie.vue","sourceRoot":"src/views/Pages/echarts","sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"main\" style=\"width: 400px; height: 500px\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getJobTypeNum } from \"../../../request/api\";\r\nimport echarts from \"echarts\";\r\nexport default {\r\n  name: \"jobPie\",\r\n  data() {\r\n    return {\r\n      list: [],\r\n    };\r\n  },\r\n  mounted: function () {\r\n      this.getJobTypeNum();\r\n  },\r\n  methods: {\r\n    getJobTypeNum() {\r\n      getJobTypeNum({})\r\n      .then((res) => {\r\n          this.list = res.data;\r\n      // 绘制图表\r\n      var myChart = echarts.init(document.getElementById(\"main\"));\r\n      // 指定图表的配置项和数据\r\n      var option = {\r\n        backgroundColor: \"#45515a\",\r\n        //标题\r\n        title: {\r\n          text: \"职位类型\",\r\n          left: \"center\",\r\n          top: 20,\r\n          textStyle: {\r\n            color: \"yellow\",\r\n            fontStyle: \"italic\", //标题字体\r\n          },\r\n        },\r\n        // stillShowZeroSum: true,\r\n        //鼠标划过时饼状图上显示的数据\r\n        tooltip: {\r\n          trigger: \"item\",\r\n          formatter: \"{a}<br/>{b}:{c} ({d}%)\",\r\n        },\r\n        //图例\r\n        legend: {\r\n         \r\n          orient: \"horizontal\",\r\n          bottom:10,\r\n          textStyle: {\r\n            color: \"rgb(214, 35, 35)\",\r\n          },\r\n        },\r\n        //饼图中各模块的颜色\r\n         toolbox: {\r\n          show: true, //显示工具箱\r\n          feature: {\r\n            dataView: { show: true }, //以文字形式显示数据\r\n            restore: { show: true }, //还原\r\n            //dataZoom:{show:true}, //区域缩放\r\n            saveAsImage: { show: true }, //保存图片\r\n            //magicType:{type:['line','bar']}//动态数据切换，数据显示可以在该规定内容中切换显示方式，\r\n          },\r\n        },\r\n         visualMap: {\r\n          show: false,\r\n          min: 1,\r\n          max: 20,\r\n          realtime: true,\r\n          dimension: 2, \r\n          inRange: {\r\n            //选定了要映射的对象，用inRange详细写要渲染的具体细节，[x，y]中x指最小值对应的量（亮度，饱和度等），y指最大值对应的量，其余的按各自value线性渲染\r\n            color:\"rgb(214, 35, 35)\"\r\n            // colorSaturation: [0, 1],\r\n          },\r\n        },\r\n        // 饼图数据\r\n        series: {\r\n          name: '职位类型信息',\r\n          type: \"pie\", //echarts图的类型   pie代表饼图\r\n          radius: \"55%\", //饼图中饼状部分的大小所占整个父元素的百分比\r\n          center: [\"50%\", \"50%\"], //整个饼图在整个父元素中的位置\r\n          roseType: \"radius\", //角度和半径展现百分比，'area'只用半径展现\r\n             //饼图数据\r\n          data: this.list,\r\n          label: {\r\n              //饼图图形的文本标签\r\n              normal: {\r\n                //下同，normal指在普通情况下样式，而非高亮时样式\r\n                textStyle: {\r\n                  color: \"rgb(214, 35, 35)\",\r\n                },\r\n              },\r\n            },\r\n             labelLine: {\r\n              //引导线样式\r\n              normal: {\r\n                lineStyle: {\r\n                  color: \"rgba(255, 255, 255, 0.3)\",\r\n                },\r\n                smooth: 0.2, //0-1，越大越平滑弯曲\r\n                length: 10, //从块到文字的第一段长\r\n                length2: 20, //拐弯到文字的段长\r\n              },\r\n            },\r\n          itemStyle: {\r\n             normal: {\r\n                   \r\n                color: \"purple\",\r\n                shadowBlur: 200, //阴影模糊程度\r\n                shadowColor: \"rgba(0, 0, 0, 0.5)\", //阴影颜色，一般黑\r\n              },\r\n               animationType: \"scale\", //初始动画效果，scale是缩放，expansion是展开\r\n            animationEasing: \"elasticOut\", //初始动画缓动效果\r\n            animationDelay: function () {\r\n              return Math.random() * 200;\r\n            },\r\n          },\r\n        },\r\n      };\r\n      // 使用刚指定的配置项和数据显示图表。\r\n      myChart.setOption(option);\r\n       })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#main{\r\n  color: rgb(214, 35, 35);\r\n}\r\n</style>\r\n\r\n"]}]}