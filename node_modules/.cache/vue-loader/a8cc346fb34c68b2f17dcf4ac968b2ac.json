{"remainingRequest":"F:\\mygit\\front-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\mygit\\front-vue\\src\\views\\Pages\\echarts\\zhuzhuangtu.vue?vue&type=style&index=0&id=1b229ede&scoped=true&lang=css&","dependencies":[{"path":"F:\\mygit\\front-vue\\src\\views\\Pages\\echarts\\zhuzhuangtu.vue","mtime":1629883543989},{"path":"F:\\mygit\\front-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\mygit\\front-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\mygit\\front-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\mygit\\front-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\mygit\\front-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5jaGFydC1jb250YWluZXIgew0KICB3aWR0aDogMTAwJTsNCiAgZmxvYXQ6IGxlZnQ7DQp9DQo="},{"version":3,"sources":["zhuzhuangtu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsJA;AACA;AACA;AACA","file":"zhuzhuangtu.vue","sourceRoot":"src/views/Pages/echarts","sourcesContent":["<template>\r\n  <div class=\"chart-container\">\r\n    <div style=\"width: 40%; height: 500px\" id=\"echartss\"></div>\r\n  </div>\r\n</template>\r\n \r\n<script>\r\nimport echarts from \"echarts\";\r\n// import { getRoleTypeNum } from \"../../../request/api\";\r\nexport default {\r\n  name: \"zhuzhuangtu\",\r\n  data() {\r\n    return {\r\n      echarts1_option: {\r\n        //需要的话下面内容copy到主体代码块即可\r\n        backgroundColor: \"#45515a\",\r\n        //标题\r\n        title: {\r\n          text: \"流量来源\",\r\n          subtext: \"饼图示例\",\r\n          left: \"center\",\r\n          top: 20,\r\n          textStyle: {\r\n            color: \"#ccc\",\r\n            fontStyle: \"italic\", //标题字体\r\n          },\r\n        },\r\n        //弹窗，响应鼠标指向，显示具体细节\r\n        tooltip: {\r\n          trigger: \"item\", //以具体项目触发弹窗\r\n          /*\r\n    内容格式器，一共有abcd四个代号，例如在饼图中，{a}指系列，即流量来源，{b}指数据项目，如搜索引擎，{c}指数值，如\r\n    value，{d}百分比。{x}本身代表了相应字符，可以和其他字符拼凑，在弹窗中显示\r\n    */\r\n          formatter: \"{a} <br/>{b} : {c} ({d}%)\",\r\n        },\r\n        //图例，选择要显示的项目\r\n        legend: {\r\n          orient: \"vertical\",\r\n          left: \"left\",\r\n          textStyle: {\r\n            color: \"#c8c8d0\",\r\n          },\r\n          data: [\"直接访问\", \"邮件营销\", \"联盟广告\", \"视频广告\", \"搜索引擎\"], //注意要和数据的name相对应\r\n        },\r\n        //工具箱\r\n        toolbox: {\r\n          show: true, //显示工具箱\r\n          feature: {\r\n            dataView: { show: true }, //以文字形式显示数据\r\n            restore: { show: true }, //还原\r\n            //dataZoom:{show:true}, //区域缩放\r\n            saveAsImage: { show: true }, //保存图片\r\n            //magicType:{type:['line','bar']}//动态数据切换，数据显示可以在该规定内容中切换显示方式，\r\n          },\r\n        },\r\n        //视觉映射组件，将数据映射到视觉元素上\r\n        visualMap: {\r\n          show: false,\r\n          min: 10,\r\n          max: 650,\r\n          dimension: 0, //选取数据的维度，如人数据：[身高，体重]，则1代表将体重进行映射，默认值为数组的最后一位\r\n          // seriesIndex: 4, //选取数据集合中的哪个数组，如{一班}，{二班}，默认选取data中的所有数据集\r\n          inRange: {\r\n            //选定了要映射的对象，用inRange详细写要渲染的具体细节，[x，y]中x指最小值对应的量（亮度，饱和度等），y指最大值对应的量，其余的按各自value线性渲染\r\n            color: [\"red\"],\r\n            colorLightness: [0, 1],\r\n            colorSaturation: [0, 1],\r\n          },\r\n        },\r\n        //数据\r\n        series: [\r\n          {\r\n            name: \"访问来源\",\r\n            type: \"pie\",\r\n            radius: \"55%\",\r\n            center: [\"50%\", \"50%\"],\r\n            data: [\r\n              { value: 335, name: \"直接访问\" },\r\n              { value: 310, name: \"邮件营销\" },\r\n              { value: 274, name: \"联盟广告\" },\r\n              { value: 235, name: \"视频广告\" },\r\n              { value: 400, name: \"搜索引擎\" },\r\n            ].sort(function (a, b) {\r\n              return a.value - b.value;\r\n            }),\r\n            roseType: \"radius\", //角度和半径展现百分比，'area'只用半径展现\r\n            label: {\r\n              //饼图图形的文本标签\r\n              normal: {\r\n                //下同，normal指在普通情况下样式，而非高亮时样式\r\n                textStyle: {\r\n                  color: \"rgba(255, 255, 255, 0.3)\",\r\n                },\r\n              },\r\n            },\r\n            labelLine: {\r\n              //引导线样式\r\n              normal: {\r\n                lineStyle: {\r\n                  color: \"rgba(255, 255, 255, 0.3)\",\r\n                },\r\n                smooth: 0.5, //0-1，越大越平滑弯曲\r\n                length: 10, //从块到文字的第一段长\r\n                length2: 20, //拐弯到文字的段长\r\n              },\r\n            },\r\n            itemStyle: {\r\n              //图例样式\r\n              normal: {\r\n                color: \"#97413c\",\r\n                shadowBlur: 50, //阴影模糊程度\r\n                shadowColor: \"rgba(0, 0, 0, 0.5)\", //阴影颜色，一般黑\r\n              },\r\n            },\r\n\r\n            animationType: \"scale\", //初始动画效果，scale是缩放，expansion是展开\r\n            animationEasing: \"elasticOut\", //初始动画缓动效果\r\n            animationDelay: function () {\r\n              //数据更新动画时长，idx限定了每个数据块从无到有的速度\r\n              return Math.random() * 200;\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    // getRoleTypeNum() {\r\n    //   getRoleTypeNum({})\r\n    //     .then((res) => {\r\n    //       this.list = res.data;\r\n    //       console.log(res.data);\r\n    //     })\r\n    //     .catch(function (err) {\r\n    //       console.log(err);\r\n    //     });\r\n    // },\r\n\r\n    mounted: function () {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      let myChart = echarts.init(document.getElementById(\"echartss\"));\r\n      // 绘制图表，this.echarts1_option是数据\r\n      myChart.setOption(this.echarts1_option);\r\n    },\r\n  },\r\n};\r\n</script>\r\n \r\n<style scoped>\r\n.chart-container {\r\n  width: 100%;\r\n  float: left;\r\n}\r\n</style>"]}]}