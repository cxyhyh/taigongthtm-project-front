{"remainingRequest":"F:\\mygit\\front-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\mygit\\front-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\mygit\\front-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\mygit\\front-vue\\src\\views\\Pages\\Admin\\companyInfo.vue?vue&type=template&id=2f906516&scoped=true&","dependencies":[{"path":"F:\\mygit\\front-vue\\src\\views\\Pages\\Admin\\companyInfo.vue","mtime":1629794799464},{"path":"F:\\mygit\\front-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\mygit\\front-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"F:\\mygit\\front-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\mygit\\front-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}