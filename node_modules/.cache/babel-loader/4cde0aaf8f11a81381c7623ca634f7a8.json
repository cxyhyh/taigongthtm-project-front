{"remainingRequest":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\thread-loader\\dist\\cjs.js!F:\\mp-project\\taigongthtm-project-front\\node_modules\\babel-loader\\lib\\index.js!F:\\mp-project\\taigongthtm-project-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\mp-project\\taigongthtm-project-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\mp-project\\taigongthtm-project-front\\node_modules\\@jiaminghi\\data-view\\lib\\components\\digitalFlop\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\@jiaminghi\\data-view\\lib\\components\\digitalFlop\\src\\main.vue","mtime":1648453569310},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648453574266},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648453592739},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1648453572806},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648453574266},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1648453593268}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkY6L21wLXByb2plY3QvdGFpZ29uZ3RodG0tcHJvamVjdC1mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBDUmVuZGVyIGZyb20gJ0BqaWFtaW5naGkvYy1yZW5kZXInOwppbXBvcnQgJ0BqaWFtaW5naGkvY2hhcnRzL2xpYi9leHRlbmQvaW5kZXgnOwppbXBvcnQgeyBkZWVwTWVyZ2UgfSBmcm9tICdAamlhbWluZ2hpL2NoYXJ0cy9saWIvdXRpbC9pbmRleCc7CmltcG9ydCB7IGRlZXBDbG9uZSB9IGZyb20gJ0BqaWFtaW5naGkvYy1yZW5kZXIvbGliL3BsdWdpbi91dGlsJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEdkRpZ2l0YWxGbG9wJywKICBwcm9wczogewogICAgY29uZmlnOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcmVuZGVyZXI6IG51bGwsCiAgICAgIGRlZmF1bHRDb25maWc6IHsKICAgICAgICAvKioNCiAgICAgICAgICogQGRlc2NyaXB0aW9uIE51bWJlciBmb3IgZGlnaXRhbCBmbG9wDQogICAgICAgICAqIEB0eXBlIHtBcnJheTxOdW1iZXI+fQ0KICAgICAgICAgKiBAZGVmYXVsdCBudW1iZXIgPSBbXQ0KICAgICAgICAgKiBAZXhhbXBsZSBudW1iZXIgPSBbMTBdDQogICAgICAgICAqLwogICAgICAgIG51bWJlcjogW10sCgogICAgICAgIC8qKg0KICAgICAgICAgKiBAZGVzY3JpcHRpb24gQ29udGVudCBmb3JtYXR0ZXINCiAgICAgICAgICogQHR5cGUge1N0cmluZ30NCiAgICAgICAgICogQGRlZmF1bHQgY29udGVudCA9ICcnDQogICAgICAgICAqIEBleGFtcGxlIGNvbnRlbnQgPSAne250feS4qicNCiAgICAgICAgICovCiAgICAgICAgY29udGVudDogJycsCgogICAgICAgIC8qKg0KICAgICAgICAgKiBAZGVzY3JpcHRpb24gTnVtYmVyIHRvRml4ZWQNCiAgICAgICAgICogQHR5cGUge051bWJlcn0NCiAgICAgICAgICogQGRlZmF1bHQgdG9GaXhlZCA9IDANCiAgICAgICAgICovCiAgICAgICAgdG9GaXhlZDogMCwKCiAgICAgICAgLyoqDQogICAgICAgICAqIEBkZXNjcmlwdGlvbiBUZXh0IGFsaWduDQogICAgICAgICAqIEB0eXBlIHtTdHJpbmd9DQogICAgICAgICAqIEBkZWZhdWx0IHRleHRBbGlnbiA9ICdjZW50ZXInDQogICAgICAgICAqIEBleGFtcGxlIHRleHRBbGlnbiA9ICdjZW50ZXInIHwgJ2xlZnQnIHwgJ3JpZ2h0Jw0KICAgICAgICAgKi8KICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLAoKICAgICAgICAvKioNCiAgICAgICAgICogQGRlc2NyaXB0aW9uIHJvd0dhcA0KICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfQ0KICAgICAgICAgQGRlZmF1bHQgcm93R2FwID0gMA0KICAgICAgICAgKi8KICAgICAgICByb3dHYXA6IDAsCgogICAgICAgIC8qKg0KICAgICAgICAgKiBAZGVzY3JpcHRpb24gVGV4dCBzdHlsZSBjb25maWd1cmF0aW9uDQogICAgICAgICAqIEB0eXBlIHtPYmplY3R9IHtDUmVuZGVyIENsYXNzIFN0eWxlfQ0KICAgICAgICAgKi8KICAgICAgICBzdHlsZTogewogICAgICAgICAgZm9udFNpemU6IDMwLAogICAgICAgICAgZmlsbDogJyMzZGU3YzknCiAgICAgICAgfSwKCiAgICAgICAgLyoqDQogICAgICAgICAqIEBkZXNjcmlwdGlvbiBOdW1iZXIgZm9ybWF0dGVyDQogICAgICAgICAqIEB0eXBlIHtOdWxsfEZ1bmN0aW9ufQ0KICAgICAgICAgKi8KICAgICAgICBmb3JtYXR0ZXI6IHVuZGVmaW5lZCwKCiAgICAgICAgLyoqDQogICAgICAgICAqIEBkZXNjcmlwdGlvbiBDUmVuZGVyIGFuaW1hdGlvbkN1cnZlDQogICAgICAgICAqIEB0eXBlIHtTdHJpbmd9DQogICAgICAgICAqIEBkZWZhdWx0IGFuaW1hdGlvbkN1cnZlID0gJ2Vhc2VPdXRDdWJpYycNCiAgICAgICAgICovCiAgICAgICAgYW5pbWF0aW9uQ3VydmU6ICdlYXNlT3V0Q3ViaWMnLAoKICAgICAgICAvKioNCiAgICAgICAgICogQGRlc2NyaXB0aW9uIENSZW5kZXIgYW5pbWF0aW9uRnJhbWUNCiAgICAgICAgICogQHR5cGUge1N0cmluZ30NCiAgICAgICAgICogQGRlZmF1bHQgYW5pbWF0aW9uRnJhbWUgPSA1MA0KICAgICAgICAgKi8KICAgICAgICBhbmltYXRpb25GcmFtZTogNTAKICAgICAgfSwKICAgICAgbWVyZ2VkQ29uZmlnOiBudWxsLAogICAgICBncmFwaDogbnVsbAogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBjb25maWc6IGZ1bmN0aW9uIGNvbmZpZygpIHsKICAgICAgdmFyIHVwZGF0ZSA9IHRoaXMudXBkYXRlOwogICAgICB1cGRhdGUoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXQ6IGZ1bmN0aW9uIGluaXQoKSB7CiAgICAgIHZhciBpbml0UmVuZGVyID0gdGhpcy5pbml0UmVuZGVyLAogICAgICAgICAgbWVyZ2VDb25maWcgPSB0aGlzLm1lcmdlQ29uZmlnLAogICAgICAgICAgaW5pdEdyYXBoID0gdGhpcy5pbml0R3JhcGg7CiAgICAgIGluaXRSZW5kZXIoKTsKICAgICAgbWVyZ2VDb25maWcoKTsKICAgICAgaW5pdEdyYXBoKCk7CiAgICB9LAogICAgaW5pdFJlbmRlcjogZnVuY3Rpb24gaW5pdFJlbmRlcigpIHsKICAgICAgdmFyICRyZWZzID0gdGhpcy4kcmVmczsKICAgICAgdGhpcy5yZW5kZXJlciA9IG5ldyBDUmVuZGVyKCRyZWZzWydkaWdpdGFsLWZsb3AnXSk7CiAgICB9LAogICAgbWVyZ2VDb25maWc6IGZ1bmN0aW9uIG1lcmdlQ29uZmlnKCkgewogICAgICB2YXIgZGVmYXVsdENvbmZpZyA9IHRoaXMuZGVmYXVsdENvbmZpZywKICAgICAgICAgIGNvbmZpZyA9IHRoaXMuY29uZmlnOwogICAgICB0aGlzLm1lcmdlZENvbmZpZyA9IGRlZXBNZXJnZShkZWVwQ2xvbmUoZGVmYXVsdENvbmZpZywgdHJ1ZSksIGNvbmZpZyB8fCB7fSk7CiAgICB9LAogICAgaW5pdEdyYXBoOiBmdW5jdGlvbiBpbml0R3JhcGgoKSB7CiAgICAgIHZhciBnZXRTaGFwZSA9IHRoaXMuZ2V0U2hhcGUsCiAgICAgICAgICBnZXRTdHlsZSA9IHRoaXMuZ2V0U3R5bGUsCiAgICAgICAgICByZW5kZXJlciA9IHRoaXMucmVuZGVyZXIsCiAgICAgICAgICBtZXJnZWRDb25maWcgPSB0aGlzLm1lcmdlZENvbmZpZzsKICAgICAgdmFyIGFuaW1hdGlvbkN1cnZlID0gbWVyZ2VkQ29uZmlnLmFuaW1hdGlvbkN1cnZlLAogICAgICAgICAgYW5pbWF0aW9uRnJhbWUgPSBtZXJnZWRDb25maWcuYW5pbWF0aW9uRnJhbWU7CiAgICAgIHZhciBzaGFwZSA9IGdldFNoYXBlKCk7CiAgICAgIHZhciBzdHlsZSA9IGdldFN0eWxlKCk7CiAgICAgIHRoaXMuZ3JhcGggPSByZW5kZXJlci5hZGQoewogICAgICAgIG5hbWU6ICdudW1iZXJUZXh0JywKICAgICAgICBhbmltYXRpb25DdXJ2ZTogYW5pbWF0aW9uQ3VydmUsCiAgICAgICAgYW5pbWF0aW9uRnJhbWU6IGFuaW1hdGlvbkZyYW1lLAogICAgICAgIHNoYXBlOiBzaGFwZSwKICAgICAgICBzdHlsZTogc3R5bGUKICAgICAgfSk7CiAgICB9LAogICAgZ2V0U2hhcGU6IGZ1bmN0aW9uIGdldFNoYXBlKCkgewogICAgICB2YXIgX3RoaXMkbWVyZ2VkQ29uZmlnID0gdGhpcy5tZXJnZWRDb25maWcsCiAgICAgICAgICBudW1iZXIgPSBfdGhpcyRtZXJnZWRDb25maWcubnVtYmVyLAogICAgICAgICAgY29udGVudCA9IF90aGlzJG1lcmdlZENvbmZpZy5jb250ZW50LAogICAgICAgICAgdG9GaXhlZCA9IF90aGlzJG1lcmdlZENvbmZpZy50b0ZpeGVkLAogICAgICAgICAgdGV4dEFsaWduID0gX3RoaXMkbWVyZ2VkQ29uZmlnLnRleHRBbGlnbiwKICAgICAgICAgIHJvd0dhcCA9IF90aGlzJG1lcmdlZENvbmZpZy5yb3dHYXAsCiAgICAgICAgICBmb3JtYXR0ZXIgPSBfdGhpcyRtZXJnZWRDb25maWcuZm9ybWF0dGVyOwoKICAgICAgdmFyIF90aGlzJHJlbmRlcmVyJGFyZWEgPSBfc2xpY2VkVG9BcnJheSh0aGlzLnJlbmRlcmVyLmFyZWEsIDIpLAogICAgICAgICAgdyA9IF90aGlzJHJlbmRlcmVyJGFyZWFbMF0sCiAgICAgICAgICBoID0gX3RoaXMkcmVuZGVyZXIkYXJlYVsxXTsKCiAgICAgIHZhciBwb3NpdGlvbiA9IFt3IC8gMiwgaCAvIDJdOwogICAgICBpZiAodGV4dEFsaWduID09PSAnbGVmdCcpIHBvc2l0aW9uWzBdID0gMDsKICAgICAgaWYgKHRleHRBbGlnbiA9PT0gJ3JpZ2h0JykgcG9zaXRpb25bMF0gPSB3OwogICAgICByZXR1cm4gewogICAgICAgIG51bWJlcjogbnVtYmVyLAogICAgICAgIGNvbnRlbnQ6IGNvbnRlbnQsCiAgICAgICAgdG9GaXhlZDogdG9GaXhlZCwKICAgICAgICBwb3NpdGlvbjogcG9zaXRpb24sCiAgICAgICAgcm93R2FwOiByb3dHYXAsCiAgICAgICAgZm9ybWF0dGVyOiBmb3JtYXR0ZXIKICAgICAgfTsKICAgIH0sCiAgICBnZXRTdHlsZTogZnVuY3Rpb24gZ2V0U3R5bGUoKSB7CiAgICAgIHZhciBfdGhpcyRtZXJnZWRDb25maWcyID0gdGhpcy5tZXJnZWRDb25maWcsCiAgICAgICAgICBzdHlsZSA9IF90aGlzJG1lcmdlZENvbmZpZzIuc3R5bGUsCiAgICAgICAgICB0ZXh0QWxpZ24gPSBfdGhpcyRtZXJnZWRDb25maWcyLnRleHRBbGlnbjsKICAgICAgcmV0dXJuIGRlZXBNZXJnZShzdHlsZSwgewogICAgICAgIHRleHRBbGlnbjogdGV4dEFsaWduLAogICAgICAgIHRleHRCYXNlbGluZTogJ21pZGRsZScKICAgICAgfSk7CiAgICB9LAogICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7CiAgICAgIHZhciBtZXJnZUNvbmZpZyA9IHRoaXMubWVyZ2VDb25maWcsCiAgICAgICAgICBtZXJnZVNoYXBlID0gdGhpcy5tZXJnZVNoYXBlLAogICAgICAgICAgZ2V0U2hhcGUgPSB0aGlzLmdldFNoYXBlLAogICAgICAgICAgZ2V0U3R5bGUgPSB0aGlzLmdldFN0eWxlLAogICAgICAgICAgZ3JhcGggPSB0aGlzLmdyYXBoLAogICAgICAgICAgbWVyZ2VkQ29uZmlnID0gdGhpcy5tZXJnZWRDb25maWc7CiAgICAgIGdyYXBoLmFuaW1hdGlvbkVuZCgpOwogICAgICBtZXJnZUNvbmZpZygpOwogICAgICBpZiAoIWdyYXBoKSByZXR1cm47CiAgICAgIHZhciBhbmltYXRpb25DdXJ2ZSA9IG1lcmdlZENvbmZpZy5hbmltYXRpb25DdXJ2ZSwKICAgICAgICAgIGFuaW1hdGlvbkZyYW1lID0gbWVyZ2VkQ29uZmlnLmFuaW1hdGlvbkZyYW1lOwogICAgICB2YXIgc2hhcGUgPSBnZXRTaGFwZSgpOwogICAgICB2YXIgc3R5bGUgPSBnZXRTdHlsZSgpOwogICAgICBtZXJnZVNoYXBlKGdyYXBoLCBzaGFwZSk7CiAgICAgIGdyYXBoLmFuaW1hdGlvbkN1cnZlID0gYW5pbWF0aW9uQ3VydmU7CiAgICAgIGdyYXBoLmFuaW1hdGlvbkZyYW1lID0gYW5pbWF0aW9uRnJhbWU7CiAgICAgIGdyYXBoLmFuaW1hdGlvbignc3R5bGUnLCBzdHlsZSwgdHJ1ZSk7CiAgICAgIGdyYXBoLmFuaW1hdGlvbignc2hhcGUnLCBzaGFwZSk7CiAgICB9LAogICAgbWVyZ2VTaGFwZTogZnVuY3Rpb24gbWVyZ2VTaGFwZShncmFwaCwgc2hhcGUpIHsKICAgICAgdmFyIGNhY2hlTnVtID0gZ3JhcGguc2hhcGUubnVtYmVyLmxlbmd0aDsKICAgICAgdmFyIHNoYXBlTnVtID0gc2hhcGUubnVtYmVyLmxlbmd0aDsKICAgICAgaWYgKGNhY2hlTnVtICE9PSBzaGFwZU51bSkgZ3JhcGguc2hhcGUubnVtYmVyID0gc2hhcGUubnVtYmVyOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBpbml0ID0gdGhpcy5pbml0OwogICAgaW5pdCgpOwogIH0KfTs="},{"version":3,"sources":["main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"dv-digital-flop\">\r\n    <canvas ref=\"digital-flop\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CRender from '@jiaminghi/c-render'\r\n\r\nimport '@jiaminghi/charts/lib/extend/index'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nexport default {\r\n  name: 'DvDigitalFlop',\r\n  props: {\r\n    config: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      renderer: null,\r\n\r\n      defaultConfig: {\r\n        /**\r\n         * @description Number for digital flop\r\n         * @type {Array<Number>}\r\n         * @default number = []\r\n         * @example number = [10]\r\n         */\r\n        number: [],\r\n        /**\r\n         * @description Content formatter\r\n         * @type {String}\r\n         * @default content = ''\r\n         * @example content = '{nt}个'\r\n         */\r\n        content: '',\r\n        /**\r\n         * @description Number toFixed\r\n         * @type {Number}\r\n         * @default toFixed = 0\r\n         */\r\n        toFixed: 0,\r\n        /**\r\n         * @description Text align\r\n         * @type {String}\r\n         * @default textAlign = 'center'\r\n         * @example textAlign = 'center' | 'left' | 'right'\r\n         */\r\n        textAlign: 'center',\r\n        /**\r\n         * @description rowGap\r\n         * @type {Number}\r\n         @default rowGap = 0\r\n         */\r\n        rowGap: 0,\r\n        /**\r\n         * @description Text style configuration\r\n         * @type {Object} {CRender Class Style}\r\n         */\r\n        style: {\r\n          fontSize: 30,\r\n          fill: '#3de7c9'\r\n        },\r\n        /**\r\n         * @description Number formatter\r\n         * @type {Null|Function}\r\n         */\r\n        formatter: undefined,\r\n        /**\r\n         * @description CRender animationCurve\r\n         * @type {String}\r\n         * @default animationCurve = 'easeOutCubic'\r\n         */\r\n        animationCurve: 'easeOutCubic',\r\n        /**\r\n         * @description CRender animationFrame\r\n         * @type {String}\r\n         * @default animationFrame = 50\r\n         */\r\n        animationFrame: 50\r\n      },\r\n\r\n      mergedConfig: null,\r\n\r\n      graph: null\r\n    }\r\n  },\r\n  watch: {\r\n    config () {\r\n      const { update } = this\r\n\r\n      update()\r\n    }\r\n  },\r\n  methods: {\r\n    init () {\r\n      const { initRender, mergeConfig, initGraph } = this\r\n\r\n      initRender()\r\n\r\n      mergeConfig()\r\n\r\n      initGraph()\r\n    },\r\n    initRender () {\r\n      const { $refs } = this\r\n\r\n      this.renderer = new CRender($refs['digital-flop'])\r\n    },\r\n    mergeConfig () {\r\n      const { defaultConfig, config } = this\r\n\r\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\r\n    },\r\n    initGraph () {\r\n      const { getShape, getStyle, renderer, mergedConfig } = this\r\n\r\n      const { animationCurve, animationFrame } = mergedConfig\r\n\r\n      const shape = getShape()\r\n      const style = getStyle()\r\n\r\n      this.graph = renderer.add({\r\n        name: 'numberText',\r\n        animationCurve,\r\n        animationFrame,\r\n        shape,\r\n        style\r\n      })\r\n    },\r\n    getShape () {\r\n      const { number, content, toFixed, textAlign, rowGap, formatter } = this.mergedConfig\r\n\r\n      const [w, h] = this.renderer.area\r\n\r\n      const position = [w / 2, h / 2]\r\n\r\n      if (textAlign === 'left') position[0] = 0\r\n      if (textAlign === 'right') position[0] = w\r\n\r\n      return {\r\n        number,\r\n        content,\r\n        toFixed,\r\n        position,\r\n        rowGap,\r\n        formatter\r\n      }\r\n    },\r\n    getStyle () {\r\n      const { style, textAlign } = this.mergedConfig\r\n\r\n      return deepMerge(style, {\r\n        textAlign,\r\n        textBaseline: 'middle'\r\n      })\r\n    },\r\n    update () {\r\n      const { mergeConfig, mergeShape, getShape, getStyle, graph, mergedConfig } = this\r\n\r\n      graph.animationEnd()\r\n\r\n      mergeConfig()\r\n\r\n      if (!graph) return\r\n\r\n      const { animationCurve, animationFrame } = mergedConfig\r\n\r\n      const shape = getShape()\r\n      const style = getStyle()\r\n\r\n      mergeShape(graph, shape)\r\n\r\n      graph.animationCurve = animationCurve\r\n      graph.animationFrame = animationFrame\r\n\r\n      graph.animation('style', style, true)\r\n      graph.animation('shape', shape)\r\n    },\r\n    mergeShape (graph, shape) {\r\n      const cacheNum = graph.shape.number.length\r\n      const shapeNum = shape.number.length\r\n\r\n      if (cacheNum !== shapeNum) graph.shape.number = shape.number\r\n    }\r\n  },\r\n  mounted () {\r\n    const { init } = this\r\n\r\n    init()\r\n  }\r\n}\r\n</script>"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/digitalFlop/src"}]}