{"remainingRequest":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\babel-loader\\lib\\index.js!F:\\mp-project\\taigongthtm-project-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\mp-project\\taigongthtm-project-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\mp-project\\taigongthtm-project-front\\node_modules\\@jiaminghi\\data-view\\lib\\components\\activeRingChart\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\@jiaminghi\\data-view\\lib\\components\\activeRingChart\\src\\main.vue","mtime":1648453569241},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648453574266},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1648453572806},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648453574266},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1648453593268}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"dv-active-ring-chart\">\r\n    <div class=\"active-ring-chart-container\" ref=\"active-ring-chart\" />\r\n    <div class=\"active-ring-info\">\r\n      <dv-digital-flop :config=\"digitalFlop\" />\r\n      <div class=\"active-ring-name\" :style=\"fontSize\">{{ ringName }}</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Charts from '@jiaminghi/charts'\r\n\r\nimport dvDigitalFlop from '../../digitalFlop/src/main.vue'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nexport default {\r\n  name: 'DvActiveRingChart',\r\n  components: {\r\n    dvDigitalFlop\r\n  },\r\n  props: {\r\n    config: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      defaultConfig: {\r\n        /**\r\n         * @description Ring radius\r\n         * @type {String|Number}\r\n         * @default radius = '50%'\r\n         * @example radius = '50%' | 100\r\n         */\r\n        radius: '50%',\r\n        /**\r\n         * @description Active ring radius\r\n         * @type {String|Number}\r\n         * @default activeRadius = '55%'\r\n         * @example activeRadius = '55%' | 110\r\n         */\r\n        activeRadius: '55%',\r\n        /**\r\n         * @description Ring data\r\n         * @type {Array<Object>}\r\n         * @default data = [{ name: '', value: 0 }]\r\n         */\r\n        data: [{ name: '', value: 0 }],\r\n        /**\r\n         * @description Ring line width\r\n         * @type {Number}\r\n         * @default lineWidth = 20\r\n         */\r\n        lineWidth: 20,\r\n        /**\r\n         * @description Active time gap (ms)\r\n         * @type {Number}\r\n         * @default activeTimeGap = 3000\r\n         */\r\n        activeTimeGap: 3000,\r\n        /**\r\n         * @description Ring color (hex|rgb|rgba|color keywords)\r\n         * @type {Array<String>}\r\n         * @default color = [Charts Default Color]\r\n         * @example color = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\r\n         */\r\n        color: [],\r\n        /**\r\n         * @description Digital flop style\r\n         * @type {Object}\r\n         */\r\n        digitalFlopStyle: {\r\n          fontSize: 25,\r\n          fill: '#fff'\r\n        },\r\n        /**\r\n         * @description Digital flop toFixed\r\n         * @type {Number}\r\n         */\r\n        digitalFlopToFixed: 0,\r\n        /**\r\n         * @description Digital flop unit\r\n         * @type {String}\r\n         */\r\n        digitalFlopUnit: '',\r\n        /**\r\n         * @description CRender animationCurve\r\n         * @type {String}\r\n         * @default animationCurve = 'easeOutCubic'\r\n         */\r\n        animationCurve: 'easeOutCubic',\r\n        /**\r\n         * @description CRender animationFrame\r\n         * @type {String}\r\n         * @default animationFrame = 50\r\n         */\r\n        animationFrame: 50,\r\n        /**\r\n         * @description showOriginValue\r\n         * @type {Boolean}\r\n         * @default showOriginValue = false\r\n         */\r\n        showOriginValue: false\r\n      },\r\n\r\n      mergedConfig: null,\r\n\r\n      chart: null,\r\n\r\n      activeIndex: 0,\r\n\r\n      animationHandler: ''\r\n    }\r\n  },\r\n  computed: {\r\n    digitalFlop() {\r\n      const { mergedConfig, activeIndex } = this\r\n\r\n      if (!mergedConfig) return {}\r\n\r\n      const {\r\n        digitalFlopStyle,\r\n        digitalFlopToFixed,\r\n        data,\r\n        showOriginValue,\r\n        digitalFlopUnit\r\n      } = mergedConfig\r\n\r\n      const value = data.map(({ value }) => value)\r\n\r\n      let displayValue\r\n\r\n      if (showOriginValue) {\r\n        displayValue = value[activeIndex]\r\n      } else {\r\n        const sum = value.reduce((all, v) => all + v, 0)\r\n\r\n        const percent = parseFloat((value[activeIndex] / sum) * 100) || 0\r\n\r\n        displayValue = percent\r\n      }\r\n\r\n      return {\r\n        content: showOriginValue ? `{nt}${digitalFlopUnit}` : `{nt}${digitalFlopUnit || '%'}`,\r\n        number: [displayValue],\r\n        style: digitalFlopStyle,\r\n        toFixed: digitalFlopToFixed\r\n      }\r\n    },\r\n    ringName() {\r\n      const { mergedConfig, activeIndex } = this\r\n\r\n      if (!mergedConfig) return ''\r\n\r\n      return mergedConfig.data[activeIndex].name\r\n    },\r\n    fontSize() {\r\n      const { mergedConfig } = this\r\n\r\n      if (!mergedConfig) return ''\r\n\r\n      return `font-size: ${mergedConfig.digitalFlopStyle.fontSize}px;`\r\n    }\r\n  },\r\n  watch: {\r\n    config() {\r\n      const { animationHandler, mergeConfig, setRingOption } = this\r\n\r\n      clearTimeout(animationHandler)\r\n\r\n      this.activeIndex = 0\r\n\r\n      mergeConfig()\r\n\r\n      setRingOption()\r\n    }\r\n  },\r\n  methods: {\r\n    init() {\r\n      const { initChart, mergeConfig, setRingOption } = this\r\n\r\n      initChart()\r\n\r\n      mergeConfig()\r\n\r\n      setRingOption()\r\n    },\r\n    initChart() {\r\n      const { $refs } = this\r\n\r\n      this.chart = new Charts($refs['active-ring-chart'])\r\n    },\r\n    mergeConfig() {\r\n      const { defaultConfig, config } = this\r\n\r\n      this.mergedConfig = deepMerge(\r\n        deepClone(defaultConfig, true),\r\n        config || {}\r\n      )\r\n    },\r\n    setRingOption() {\r\n      const { getRingOption, chart, ringAnimation } = this\r\n\r\n      const option = getRingOption()\r\n\r\n      chart.setOption(option, true)\r\n\r\n      ringAnimation()\r\n    },\r\n    getRingOption() {\r\n      const { mergedConfig, getRealRadius } = this\r\n\r\n      const radius = getRealRadius()\r\n\r\n      mergedConfig.data.forEach(dataItem => {\r\n        dataItem.radius = radius\r\n      })\r\n\r\n      return {\r\n        series: [\r\n          {\r\n            type: 'pie',\r\n            ...mergedConfig,\r\n            outsideLabel: {\r\n              show: false\r\n            }\r\n          }\r\n        ],\r\n        color: mergedConfig.color\r\n      }\r\n    },\r\n    getRealRadius(active = false) {\r\n      const { mergedConfig, chart } = this\r\n\r\n      const { radius, activeRadius, lineWidth } = mergedConfig\r\n\r\n      const maxRadius = Math.min(...chart.render.area) / 2\r\n\r\n      const halfLineWidth = lineWidth / 2\r\n\r\n      let realRadius = active ? activeRadius : radius\r\n\r\n      if (typeof realRadius !== 'number')\r\n        realRadius = (parseInt(realRadius) / 100) * maxRadius\r\n\r\n      const insideRadius = realRadius - halfLineWidth\r\n      const outSideRadius = realRadius + halfLineWidth\r\n\r\n      return [insideRadius, outSideRadius]\r\n    },\r\n    ringAnimation() {\r\n      let { activeIndex, getRingOption, chart, getRealRadius } = this\r\n\r\n      const radius = getRealRadius()\r\n      const active = getRealRadius(true)\r\n\r\n      const option = getRingOption()\r\n\r\n      const { data } = option.series[0]\r\n\r\n      data.forEach((dataItem, i) => {\r\n        if (i === activeIndex) {\r\n          dataItem.radius = active\r\n        } else {\r\n          dataItem.radius = radius\r\n        }\r\n      })\r\n\r\n      chart.setOption(option, true)\r\n\r\n      const { activeTimeGap } = option.series[0]\r\n\r\n      this.animationHandler = setTimeout(foo => {\r\n        activeIndex += 1\r\n\r\n        if (activeIndex >= data.length) activeIndex = 0\r\n\r\n        this.activeIndex = activeIndex\r\n\r\n        this.ringAnimation()\r\n      }, activeTimeGap)\r\n    }\r\n  },\r\n  mounted() {\r\n    const { init } = this\r\n\r\n    init()\r\n  },\r\n  beforeDestroy() {\r\n    const { animationHandler } = this\r\n\r\n    clearTimeout(animationHandler)\r\n  }\r\n}\r\n</script>"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/activeRingChart/src"}]}