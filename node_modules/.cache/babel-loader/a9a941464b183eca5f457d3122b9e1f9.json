{"remainingRequest":"F:\\mygit\\front-vue\\node_modules\\babel-loader\\lib\\index.js!F:\\mygit\\front-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\mygit\\front-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\mygit\\front-vue\\src\\views\\Pages\\echarts\\companyPie.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\mygit\\front-vue\\src\\views\\Pages\\echarts\\companyPie.vue","mtime":1632285344793},{"path":"F:\\mygit\\front-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\mygit\\front-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\mygit\\front-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\mygit\\front-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZ2V0Q29tcGFueVR5cGVOdW0gYXMgX2dldENvbXBhbnlUeXBlTnVtIH0gZnJvbSAiLi4vLi4vLi4vcmVxdWVzdC9hcGkiOwppbXBvcnQgZWNoYXJ0cyBmcm9tICJlY2hhcnRzIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJjb21wYW55UGllIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29tcGFueTogW10KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5nZXRDb21wYW55VHlwZU51bSgpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0Q29tcGFueVR5cGVOdW06IGZ1bmN0aW9uIGdldENvbXBhbnlUeXBlTnVtKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgX2dldENvbXBhbnlUeXBlTnVtKHt9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpcy5jb21wYW55ID0gcmVzLmRhdGE7IC8vIOe7mOWItuWbvuihqAoKICAgICAgICB2YXIgbXlDaGFydCA9IGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZWNoYXJ0czEiKSk7IC8vIOaMh+WumuWbvuihqOeahOmFjee9rumhueWSjOaVsOaNrgoKICAgICAgICB2YXIgb3B0aW9uID0gewogICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAiIzQ1NTE1YSIsCiAgICAgICAgICBjb2xvcjogWycjZTQ1OTBkJywgJyNmZmI0MDAnLCAnIzVhZDAxYycsICcjMDBhZWZmJywgJ3llbGxvdycsICcjZmY3ZDI3JywgJyMyMjhiMjInLCAnIzU3YTJmZCcsICcjNDdiNzNkJywgJyNmY2MzNmUnLCAncHVycGxlJywgJ29yYW5nZScsICdnb2xkJywgJ3JlZCddLAogICAgICAgICAgLy/moIfpopgKICAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgIHRleHQ6ICLkvIHkuJrnsbvlnovnu5/orqHlj6/op4bljJYiLAogICAgICAgICAgICBsZWZ0OiAiY2VudGVyIiwKICAgICAgICAgICAgdG9wOiAyMCwKICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICJ5ZWxsb3ciLAogICAgICAgICAgICAgIGZvbnRTdHlsZTogIml0YWxpYyIgLy/moIfpopjlrZfkvZMKCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICAvL+m8oOagh+WIkui/h+aXtumlvOeKtuWbvuS4iuaYvuekuueahOaVsOaNrgogICAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgICB0cmlnZ2VyOiAiaXRlbSIsCiAgICAgICAgICAgIGZvcm1hdHRlcjogInthfTxici8+e2J9OntjfSAoe2R9JSkiLAogICAgICAgICAgICBwYWRkaW5nOiAxMAogICAgICAgICAgfSwKICAgICAgICAgIC8v5Zu+5L6LCiAgICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgICAgb3JpZW50OiAiaG9yaXpvbnRhbCIsCiAgICAgICAgICAgIGJvdHRvbTogMTAsCiAgICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAid2hpdGUiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICAvL+mlvOWbvuS4reWQhOaooeWdl+eahOminOiJsgogICAgICAgICAgdG9vbGJveDogewogICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAvL+aYvuekuuW3peWFt+eusQogICAgICAgICAgICBmZWF0dXJlOiB7CiAgICAgICAgICAgICAgZGF0YVZpZXc6IHsKICAgICAgICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIC8v5Lul5paH5a2X5b2i5byP5pi+56S65pWw5o2uCiAgICAgICAgICAgICAgcmVzdG9yZTogewogICAgICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgLy/ov5jljp8KICAgICAgICAgICAgICAvL2RhdGFab29tOntzaG93OnRydWV9LCAvL+WMuuWfn+e8qeaUvgogICAgICAgICAgICAgIHNhdmVBc0ltYWdlOiB7CiAgICAgICAgICAgICAgICBzaG93OiB0cnVlCiAgICAgICAgICAgICAgfSAvL+S/neWtmOWbvueJhwogICAgICAgICAgICAgIC8vbWFnaWNUeXBlOnt0eXBlOlsnbGluZScsJ2JhciddfS8v5Yqo5oCB5pWw5o2u5YiH5o2i77yM5pWw5o2u5pi+56S65Y+v5Lul5Zyo6K+l6KeE5a6a5YaF5a655Lit5YiH5o2i5pi+56S65pa55byP77yMCgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgLy8gdmlzdWFsTWFwOiB7CiAgICAgICAgICAvLyAgIHNob3c6IGZhbHNlLAogICAgICAgICAgLy8gICBtaW46IDEsCiAgICAgICAgICAvLyAgIG1heDogMjAsCiAgICAgICAgICAvLyAgIHJlYWx0aW1lOiB0cnVlLAogICAgICAgICAgLy8gICBkaW1lbnNpb246IDIsCiAgICAgICAgICAvLyAgIC8vIGluUmFuZ2U6IHsKICAgICAgICAgIC8vICAgLy8gICAvL+mAieWumuS6huimgeaYoOWwhOeahOWvueixoe+8jOeUqGluUmFuZ2Xor6bnu4blhpnopoHmuLLmn5PnmoTlhbfkvZPnu4boioLvvIxbeO+8jHld5LiteOaMh+acgOWwj+WAvOWvueW6lOeahOmHj++8iOS6ruW6pu+8jOmlseWSjOW6puetie+8ie+8jHnmjIfmnIDlpKflgLzlr7nlupTnmoTph4/vvIzlhbbkvZnnmoTmjInlkIToh6p2YWx1Zee6v+aAp+a4suafkwogICAgICAgICAgLy8gICAvLyAgIGNvbG9yOiAib3JhbmdlIiwKICAgICAgICAgIC8vICAgLy8gICAvLyBjb2xvclNhdHVyYXRpb246IFswLCAxXSwKICAgICAgICAgIC8vICAgLy8gfSwKICAgICAgICAgIC8vIH0sCiAgICAgICAgICAvLyDppbzlm77mlbDmja4KICAgICAgICAgIHNlcmllczogewogICAgICAgICAgICBuYW1lOiAi5LyB5Lia57G75Z6L5L+h5oGvIiwKICAgICAgICAgICAgdHlwZTogInBpZSIsCiAgICAgICAgICAgIC8vZWNoYXJ0c+WbvueahOexu+WeiyAgIHBpZeS7o+ihqOmlvOWbvgogICAgICAgICAgICAvLyByYWRpdXM6ICI1NSUiLCAvL+mlvOWbvuS4remlvOeKtumDqOWIhueahOWkp+Wwj+aJgOWNoOaVtOS4queItuWFg+e0oOeahOeZvuWIhuavlAogICAgICAgICAgICBjZW50ZXI6IFsiNTAlIiwgIjUwJSJdLAogICAgICAgICAgICAvL+aVtOS4qumlvOWbvuWcqOaVtOS4queItuWFg+e0oOS4reeahOS9jee9rgogICAgICAgICAgICByb3NlVHlwZTogInJhZGl1cyIsCiAgICAgICAgICAgIHJhZGl1czogWyI1MCUiLCAiNjAlIl0sCiAgICAgICAgICAgIGF2b2lkTGFiZWxPdmVybGFwOiB0cnVlLAogICAgICAgICAgICAvL+inkuW6puWSjOWNiuW+hOWxleeOsOeZvuWIhuavlO+8jCdhcmVhJ+WPqueUqOWNiuW+hOWxleeOsAogICAgICAgICAgICAvL+mlvOWbvuaVsOaNrgogICAgICAgICAgICBkYXRhOiBfdGhpcy5jb21wYW55LAogICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgIC8v6aW85Zu+5Zu+5b2i55qE5paH5pys5qCH562+CiAgICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgICAvL+S4i+WQjO+8jG5vcm1hbOaMh+WcqOaZrumAmuaDheWGteS4i+agt+W8j++8jOiAjOmdnumrmOS6ruaXtuagt+W8jwogICAgICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiAid2hpdGUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBsYWJlbExpbmU6IHsKICAgICAgICAgICAgICAvL+W8leWvvOe6v+agt+W8jwogICAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiAicmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHNtb290aDogMC4yLAogICAgICAgICAgICAgICAgLy8wLTHvvIzotorlpKfotorlubPmu5HlvK/mm7IKICAgICAgICAgICAgICAgIGxlbmd0aDogMTAsCiAgICAgICAgICAgICAgICAvL+S7juWdl+WIsOaWh+Wtl+eahOesrOS4gOautemVvwogICAgICAgICAgICAgICAgbGVuZ3RoMjogMjAgLy/mi5DlvK/liLDmloflrZfnmoTmrrXplb8KCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiAiI2ZmZiIsCiAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgYW5pbWF0aW9uVHlwZTogInNjYWxlIiwKICAgICAgICAgICAgICAvL+WIneWni+WKqOeUu+aViOaenO+8jHNjYWxl5piv57yp5pS+77yMZXhwYW5zaW9u5piv5bGV5byACiAgICAgICAgICAgICAgYW5pbWF0aW9uRWFzaW5nOiAiZWxhc3RpY091dCIsCiAgICAgICAgICAgICAgLy/liJ3lp4vliqjnlLvnvJPliqjmlYjmnpwKICAgICAgICAgICAgICBhbmltYXRpb25EZWxheTogZnVuY3Rpb24gYW5pbWF0aW9uRGVsYXkoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gTWF0aC5yYW5kb20oKSAqIDIwMDsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9OyAvLyDkvb/nlKjliJrmjIflrprnmoTphY3nva7pobnlkozmlbDmja7mmL7npLrlm77ooajjgIIKCiAgICAgICAgbXlDaGFydC5zZXRPcHRpb24ob3B0aW9uKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["companyPie.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <div style=\"width: 450x; height: 500px\" id=\"echarts1\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCompanyTypeNum } from \"../../../request/api\";\r\nimport echarts from \"echarts\";\r\nexport default {\r\n  name: \"companyPie\",\r\n  data() {\r\n    return {\r\n      company: [],\r\n    };\r\n  },\r\n  mounted: function () {\r\n    this.getCompanyTypeNum();\r\n  },\r\n  methods: {\r\n    getCompanyTypeNum() {\r\n      getCompanyTypeNum({})\r\n        .then((res) => {\r\n          this.company = res.data;\r\n          // 绘制图表\r\n          var myChart = echarts.init(document.getElementById(\"echarts1\"));\r\n          // 指定图表的配置项和数据\r\n          var option = {\r\n            backgroundColor: \"#45515a\",\r\n            color: ['#e4590d', '#ffb400', '#5ad01c', '#00aeff','yellow','#ff7d27','#228b22','#57a2fd', '#47b73d', '#fcc36e','purple','orange','gold','red'],\r\n            //标题\r\n            title: {\r\n              text: \"企业类型统计可视化\",\r\n              left: \"center\",\r\n              top: 20,\r\n              textStyle: {\r\n                color: \"yellow\",\r\n                fontStyle: \"italic\", //标题字体\r\n              },\r\n            },\r\n            //鼠标划过时饼状图上显示的数据\r\n            tooltip: {\r\n              trigger: \"item\",\r\n              formatter: \"{a}<br/>{b}:{c} ({d}%)\",\r\n              padding: 10,\r\n            },\r\n            //图例\r\n            legend: {\r\n              orient: \"horizontal\",\r\n              bottom: 10,\r\n              textStyle: {\r\n                color: \"white\",\r\n              },\r\n            },\r\n            //饼图中各模块的颜色\r\n            toolbox: {\r\n              show: true, //显示工具箱\r\n              feature: {\r\n                dataView: { show: true }, //以文字形式显示数据\r\n                restore: { show: true }, //还原\r\n                //dataZoom:{show:true}, //区域缩放\r\n                saveAsImage: { show: true }, //保存图片\r\n                //magicType:{type:['line','bar']}//动态数据切换，数据显示可以在该规定内容中切换显示方式，\r\n              },\r\n            },\r\n            // visualMap: {\r\n            //   show: false,\r\n            //   min: 1,\r\n            //   max: 20,\r\n            //   realtime: true,\r\n            //   dimension: 2,\r\n            //   // inRange: {\r\n            //   //   //选定了要映射的对象，用inRange详细写要渲染的具体细节，[x，y]中x指最小值对应的量（亮度，饱和度等），y指最大值对应的量，其余的按各自value线性渲染\r\n            //   //   color: \"orange\",\r\n            //   //   // colorSaturation: [0, 1],\r\n            //   // },\r\n            // },\r\n            // 饼图数据\r\n            series: {\r\n              name: \"企业类型信息\",\r\n              type: \"pie\", //echarts图的类型   pie代表饼图\r\n              // radius: \"55%\", //饼图中饼状部分的大小所占整个父元素的百分比\r\n              center: [\"50%\", \"50%\"], //整个饼图在整个父元素中的位置\r\n              roseType: \"radius\",\r\n              radius: [\"50%\", \"60%\"],\r\n              avoidLabelOverlap: true, //角度和半径展现百分比，'area'只用半径展现\r\n              //饼图数据\r\n              data: this.company,\r\n\r\n              label: {\r\n                //饼图图形的文本标签\r\n                normal: {\r\n                  //下同，normal指在普通情况下样式，而非高亮时样式\r\n                  textStyle: {\r\n                    color: \"white\",\r\n                  },\r\n                },\r\n              },\r\n              labelLine: {\r\n                //引导线样式\r\n                normal: {\r\n                  lineStyle: {\r\n                    color: \"rgba(255, 255, 255, 0.3)\",\r\n                  },\r\n                  smooth: 0.2, //0-1，越大越平滑弯曲\r\n                  length: 10, //从块到文字的第一段长\r\n                  length2: 20, //拐弯到文字的段长\r\n                },\r\n              },\r\n              itemStyle: {\r\n                normal: {\r\n                  borderColor: \"#fff\",\r\n                  borderWidth: 3,\r\n                },\r\n                animationType: \"scale\", //初始动画效果，scale是缩放，expansion是展开\r\n                animationEasing: \"elasticOut\", //初始动画缓动效果\r\n                animationDelay: function () {\r\n                  return Math.random() * 200;\r\n                },\r\n              },\r\n            },\r\n          };\r\n          // 使用刚指定的配置项和数据显示图表。\r\n          myChart.setOption(option);\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"],"sourceRoot":"src/views/Pages/echarts"}]}