{"remainingRequest":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\thread-loader\\dist\\cjs.js!F:\\mp-project\\taigongthtm-project-front\\node_modules\\babel-loader\\lib\\index.js!F:\\mp-project\\taigongthtm-project-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\mp-project\\taigongthtm-project-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\mp-project\\taigongthtm-project-front\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollBoard\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollBoard\\src\\main.vue","mtime":1648453569325},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648453574266},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648453592739},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1648453572806},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648453574266},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1648453593268}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA,OAAA,UAAA,MAAA,2BAAA;AAEA,SAAA,SAAA,QAAA,kCAAA;AAEA,SAAA,SAAA,QAAA,qCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,MAAA,EAAA,CAAA,UAAA,CAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA;AADA,GAHA;AASA,EAAA,IATA,kBASA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,cADA;AAGA,MAAA,aAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,MAAA,EAAA,EAPA;;AAQA;AACA;AACA;AACA;AACA;AACA,QAAA,IAAA,EAAA,EAbA;;AAcA;AACA;AACA;AACA;AACA;AACA,QAAA,MAAA,EAAA,CAnBA;;AAoBA;AACA;AACA;AACA;AACA;AACA,QAAA,SAAA,EAAA,SAzBA;;AA0BA;AACA;AACA;AACA;AACA;AACA,QAAA,SAAA,EAAA,SA/BA;;AAgCA;AACA;AACA;AACA;AACA;AACA,QAAA,UAAA,EAAA,SArCA;;AAsCA;AACA;AACA;AACA;AACA;AACA,QAAA,QAAA,EAAA,IA3CA;;AA4CA;AACA;AACA;AACA;AACA;AACA,QAAA,YAAA,EAAA,EAjDA;;AAkDA;AACA;AACA;AACA;AACA;AACA,QAAA,WAAA,EAAA,EAvDA;;AAwDA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,KAAA,EAAA,EA9DA;;AA+DA;AACA;AACA;AACA;AACA;AACA,QAAA,KAAA,EAAA,KApEA;;AAqEA;AACA;AACA;AACA;AACA;AACA,QAAA,WAAA,EAAA,GA1EA;;AA2EA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,QAAA,EAAA,QAjFA;;AAkFA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,UAAA,EAAA;AAxFA,OAHA;AA8FA,MAAA,YAAA,EAAA,IA9FA;AAgGA,MAAA,MAAA,EAAA,EAhGA;AAkGA,MAAA,QAAA,EAAA,EAlGA;AAoGA,MAAA,IAAA,EAAA,EApGA;AAsGA,MAAA,MAAA,EAAA,EAtGA;AAwGA,MAAA,OAAA,EAAA,EAxGA;AA0GA,MAAA,SAAA,EAAA,CA1GA;AA4GA,MAAA,MAAA,EAAA,EA5GA;AA8GA,MAAA,cAAA,EAAA,CA9GA;AAgHA,MAAA,gBAAA,EAAA,EAhHA;AAkHA,MAAA,OAAA,EAAA,CAlHA;AAoHA,MAAA,QAAA,EAAA;AApHA,KAAA;AAsHA,GAhIA;AAiIA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA,UACA,aADA,GACA,IADA,CACA,aADA;AAAA,UACA,QADA,GACA,IADA,CACA,QADA;AAGA,MAAA,aAAA;AAEA,WAAA,cAAA,GAAA,CAAA;AAEA,MAAA,QAAA;AACA;AATA,GAjIA;AA4IA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,KADA,EACA,EADA,EACA,EADA,EACA,GADA,EACA,IADA,EACA;AAAA,UACA,YADA,GACA,IADA,CACA,YADA;AAAA,UACA,SADA,GACA,IADA,CACA,SADA;AAAA,UACA,aADA,GACA,IADA,CACA,aADA;AAAA,UACA,SADA,GACA,IADA,CACA,SADA;AAGA,UAAA,KAAA,EAAA,SAAA,CAAA,WAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,CAAA;AACA,UAAA,CAAA,YAAA,CAAA,UAAA,EAAA;;AAEA,UAAA,KAAA,EAAA;AACA,QAAA,aAAA;AACA,OAFA,MAEA;AACA,QAAA,SAAA,CAAA,IAAA,CAAA;AACA;AACA,KAZA;AAaA,IAAA,wBAbA,sCAaA;AAAA,UACA,QADA,GACA,IADA,CACA,QADA;AAGA,MAAA,QAAA;AACA,KAjBA;AAkBA,IAAA,QAlBA,sBAkBA;AAAA,UACA,YADA,GACA,IADA,CACA,YADA;AAAA,UACA,UADA,GACA,IADA,CACA,UADA;AAAA,UACA,WADA,GACA,IADA,CACA,WADA;AAGA,UAAA,CAAA,YAAA,EAAA;AAEA,MAAA,UAAA;AAEA,MAAA,WAAA;AACA,KA1BA;AA2BA,IAAA,QA3BA,sBA2BA;AAAA,UACA,WADA,GACA,IADA,CACA,WADA;AAAA,UACA,cADA,GACA,IADA,CACA,cADA;AAAA,UACA,YADA,GACA,IADA,CACA,YADA;AAGA,MAAA,WAAA;AAEA,MAAA,cAAA;AAEA,MAAA,YAAA;AAPA,UASA,UATA,GASA,IATA,CASA,UATA;AAAA,UASA,WATA,GASA,IATA,CASA,WATA;AAAA,UASA,UATA,GASA,IATA,CASA,UATA;AAWA,MAAA,UAAA;AAEA,MAAA,WAAA;AAEA,MAAA,UAAA;AAfA,UAiBA,SAjBA,GAiBA,IAjBA,CAiBA,SAjBA;AAmBA,MAAA,SAAA,CAAA,IAAA,CAAA;AACA,KA/CA;AAgDA,IAAA,WAhDA,yBAgDA;AAAA,UACA,MADA,GACA,IADA,CACA,MADA;AAAA,UACA,aADA,GACA,IADA,CACA,aADA;AAGA,WAAA,YAAA,GAAA,SAAA,CAAA,SAAA,CAAA,aAAA,EAAA,IAAA,CAAA,EAAA,MAAA,IAAA,EAAA,CAAA;AACA,KApDA;AAqDA,IAAA,cArDA,4BAqDA;AAAA,+BACA,KAAA,YADA;AAAA,UACA,MADA,sBACA,MADA;AAAA,UACA,KADA,sBACA,KADA;AAAA,UACA,WADA,sBACA,WADA;;AAGA,UAAA,CAAA,MAAA,CAAA,MAAA,EAAA;AACA,aAAA,MAAA,GAAA,EAAA;AAEA;AACA;;AAEA,MAAA,MAAA,sBAAA,MAAA,CAAA;AAEA,UAAA,KAAA,EAAA,MAAA,CAAA,OAAA,CAAA,WAAA;AAEA,WAAA,MAAA,GAAA,MAAA;AACA,KAnEA;AAoEA,IAAA,YApEA,0BAoEA;AAAA,gCACA,KAAA,YADA;AAAA,UACA,IADA,uBACA,IADA;AAAA,UACA,KADA,uBACA,KADA;AAAA,UACA,SADA,uBACA,SADA;AAAA,UACA,MADA,uBACA,MADA;;AAGA,UAAA,KAAA,EAAA;AACA,QAAA,IAAA,GAAA,IAAA,CAAA,GAAA,CAAA,UAAA,GAAA,EAAA,CAAA,EAAA;AACA,UAAA,GAAA,sBAAA,GAAA,CAAA;AAEA,cAAA,QAAA,6DAAA,SAAA,iBAAA,CAAA,GAAA,CAAA,YAAA;AAEA,UAAA,GAAA,CAAA,OAAA,CAAA,QAAA;AAEA,iBAAA,GAAA;AACA,SARA,CAAA;AASA;;AAEA,MAAA,IAAA,GAAA,IAAA,CAAA,GAAA,CAAA,UAAA,KAAA,EAAA,CAAA;AAAA,eAAA;AAAA,UAAA,KAAA,EAAA,KAAA;AAAA,UAAA,QAAA,EAAA;AAAA,SAAA;AAAA,OAAA,CAAA;AAEA,UAAA,SAAA,GAAA,IAAA,CAAA,MAAA;;AAEA,UAAA,SAAA,GAAA,MAAA,IAAA,SAAA,GAAA,IAAA,MAAA,EAAA;AACA,QAAA,IAAA,gCAAA,IAAA,sBAAA,IAAA,EAAA;AACA;;AAEA,MAAA,IAAA,GAAA,IAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA,CAAA;AAAA,+CAAA,CAAA;AAAA,UAAA,MAAA,EAAA;AAAA;AAAA,OAAA,CAAA;AAEA,WAAA,QAAA,GAAA,IAAA;AACA,WAAA,IAAA,GAAA,IAAA;AACA,KA/FA;AAgGA,IAAA,UAhGA,wBAgGA;AAAA,UACA,KADA,GACA,IADA,CACA,KADA;AAAA,UACA,YADA,GACA,IADA,CACA,YADA;AAAA,UACA,QADA,GACA,IADA,CACA,QADA;AAAA,UAGA,WAHA,GAGA,YAHA,CAGA,WAHA;AAAA,UAGA,MAHA,GAGA,YAHA,CAGA,MAHA;AAKA,UAAA,SAAA,GAAA,WAAA,CAAA,MAAA,CAAA,UAAA,GAAA,EAAA,CAAA;AAAA,eAAA,GAAA,GAAA,CAAA;AAAA,OAAA,EAAA,CAAA,CAAA;AAEA,UAAA,SAAA,GAAA,CAAA;;AACA,UAAA,QAAA,CAAA,CAAA,CAAA,EAAA;AACA,QAAA,SAAA,GAAA,QAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,MAAA;AACA,OAFA,MAEA,IAAA,MAAA,CAAA,MAAA,EAAA;AACA,QAAA,SAAA,GAAA,MAAA,CAAA,MAAA;AACA;;AAEA,UAAA,QAAA,GAAA,CAAA,KAAA,GAAA,SAAA,KAAA,SAAA,GAAA,WAAA,CAAA,MAAA,CAAA;AAEA,UAAA,MAAA,GAAA,IAAA,KAAA,CAAA,SAAA,EAAA,IAAA,CAAA,QAAA,CAAA;AAEA,WAAA,MAAA,GAAA,SAAA,CAAA,MAAA,EAAA,WAAA,CAAA;AACA,KAnHA;AAoHA,IAAA,WApHA,yBAoHA;AAAA,UAAA,QAAA,uEAAA,KAAA;AAAA,UACA,MADA,GACA,IADA,CACA,MADA;AAAA,UACA,YADA,GACA,IADA,CACA,YADA;AAAA,UACA,MADA,GACA,IADA,CACA,MADA;AAAA,UAGA,YAHA,GAGA,YAHA,CAGA,YAHA;AAAA,UAGA,MAHA,GAGA,YAHA,CAGA,MAHA;AAAA,UAGA,IAHA,GAGA,YAHA,CAGA,IAHA;AAKA,UAAA,SAAA,GAAA,MAAA;AAEA,UAAA,MAAA,CAAA,MAAA,EAAA,SAAA,IAAA,YAAA;AAEA,UAAA,SAAA,GAAA,SAAA,GAAA,MAAA;AAEA,WAAA,SAAA,GAAA,SAAA;AAEA,UAAA,CAAA,QAAA,EAAA,KAAA,OAAA,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,MAAA,EAAA,IAAA,CAAA,SAAA,CAAA;AACA,KAlIA;AAmIA,IAAA,UAnIA,wBAmIA;AAAA,UACA,MADA,GACA,IADA,CACA,MADA;AAAA,UACA,YADA,GACA,IADA,CACA,YADA;AAGA,UAAA,SAAA,GAAA,MAAA,CAAA,MAAA;AAEA,UAAA,MAAA,GAAA,IAAA,KAAA,CAAA,SAAA,EAAA,IAAA,CAAA,MAAA,CAAA;AALA,UAOA,KAPA,GAOA,YAPA,CAOA,KAPA;AASA,WAAA,MAAA,GAAA,SAAA,CAAA,MAAA,EAAA,KAAA,CAAA;AACA,KA7IA;AA8IA,IAAA,SA9IA,uBA8IA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAA,KAAA,0EAAA,KAAA;AACA,gBAAA,QADA,GACA,KADA,CACA,QADA,EACA,WADA,GACA,KADA,CACA,WADA,EACA,YADA,GACA,KADA,CACA,YADA;;AAGA,oBAAA,QAAA,EAAA;AACA,kBAAA,YAAA;AACA,kBAAA,WAAA;AACA,kBAAA,KAAA,CAAA,QAAA,GAAA,KAAA;AACA;;AAEA,gBAAA,SATA,GASA,KATA,CASA,SATA,EASA,cATA,GASA,KATA,CASA,cATA,EASA,YATA,GASA,KATA,CASA,YATA,EASA,QATA,GASA,KATA,CASA,QATA,EASA,SATA,GASA,KATA,CASA,SATA,EASA,OATA,GASA,KATA,CASA,OATA;AAWA,gBAAA,QAXA,GAWA,YAXA,CAWA,QAXA,EAWA,QAXA,GAWA,YAXA,CAWA,QAXA,EAWA,MAXA,GAWA,YAXA,CAWA,MAXA;AAaA,gBAAA,SAbA,GAaA,QAAA,CAAA,MAbA;;AAAA,sBAeA,MAAA,IAAA,SAfA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,qBAiBA,KAjBA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAkBA,IAAA,OAAA,CAAA,UAAA,OAAA;AAAA,yBAAA,UAAA,CAAA,OAAA,EAAA,QAAA,CAAA;AAAA,iBAAA,CAlBA;;AAAA;AAAA,sBAmBA,OAAA,KAAA,KAAA,CAAA,OAnBA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAsBA,gBAAA,YAtBA,GAsBA,QAAA,KAAA,QAAA,GAAA,CAAA,GAAA,MAtBA;AAwBA,gBAAA,IAxBA,GAwBA,QAAA,CAAA,KAAA,CAAA,cAAA,CAxBA;AAyBA,gBAAA,IAAA,CAAA,IAAA,OAAA,IAAA,qBAAA,QAAA,CAAA,KAAA,CAAA,CAAA,EAAA,cAAA,CAAA,EAAA;AAEA,gBAAA,KAAA,CAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA,QAAA,KAAA,MAAA,GAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,CAAA;AACA,gBAAA,KAAA,CAAA,OAAA,GAAA,IAAA,KAAA,CAAA,SAAA,EAAA,IAAA,CAAA,SAAA,CAAA;AA5BA;AAAA,uBA8BA,IAAA,OAAA,CAAA,UAAA,OAAA;AAAA,yBAAA,UAAA,CAAA,OAAA,EAAA,GAAA,CAAA;AAAA,iBAAA,CA9BA;;AAAA;AAAA,sBA+BA,OAAA,KAAA,KAAA,CAAA,OA/BA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAiCA,iCAAA,KAAA,CAAA,OAAA,EAAA,MAAA,uBAAA,CAAA,EAAA,YAAA,4BAAA,IAAA,KAAA,CAAA,YAAA,EAAA,IAAA,CAAA,CAAA,CAAA;;AAEA,gBAAA,cAAA,IAAA,YAAA;AAEA,gBAAA,IArCA,GAqCA,cAAA,GAAA,SArCA;AAsCA,oBAAA,IAAA,IAAA,CAAA,EAAA,cAAA,GAAA,IAAA;AAEA,gBAAA,KAAA,CAAA,cAAA,GAAA,cAAA;AACA,gBAAA,KAAA,CAAA,gBAAA,GAAA,UAAA,CAAA,SAAA,EAAA,QAAA,GAAA,GAAA,CAAA;;AAzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0CA,KAxLA;AAyLA,IAAA,aAzLA,2BAyLA;AAAA,UACA,gBADA,GACA,IADA,CACA,gBADA;AAAA,UACA,OADA,GACA,IADA,CACA,OADA;AAGA,WAAA,OAAA,GAAA,CAAA,OAAA,GAAA,CAAA,IAAA,MAAA;AAEA,UAAA,CAAA,gBAAA,EAAA;AAEA,MAAA,YAAA,CAAA,gBAAA,CAAA;AACA,KAjMA;AAkMA,IAAA,SAlMA,qBAkMA,IAlMA,EAkMA,EAlMA,EAkMA,EAlMA,EAkMA,GAlMA,EAkMA,IAlMA,EAkMA;AAAA,UACA,KADA,GACA,GADA,CACA,KADA;AAAA,UACA,QADA,GACA,GADA,CACA,QADA;AAGA,WAAA,KAAA,CAAA,IAAA,EAAA;AACA,QAAA,GAAA,EAAA,KADA;AAEA,QAAA,IAAA,EAAA,IAFA;AAGA,QAAA,QAAA,EAAA,QAHA;AAIA,QAAA,WAAA,EAAA;AAJA,OAAA;AAMA,KA3MA;AA4MA,IAAA,UA5MA,sBA4MA,IA5MA,EA4MA,cA5MA,EA4MA;AAAA,UACA,YADA,GACA,IADA,CACA,YADA;AAAA,UACA,gBADA,GACA,IADA,CACA,gBADA;AAAA,UACA,SADA,GACA,IADA,CACA,SADA;AAGA,WAAA,YAAA,mCACA,YADA;AAEA,QAAA,IAAA,qBAAA,IAAA;AAFA;AAKA,WAAA,QAAA,GAAA,IAAA;AAEA,UAAA,OAAA,cAAA,KAAA,QAAA,EAAA,KAAA,cAAA,GAAA,cAAA;AACA,UAAA,CAAA,gBAAA,EAAA,SAAA,CAAA,IAAA,CAAA;AACA;AAxNA,GA5IA;AAsWA,EAAA,SAtWA,uBAsWA;AAAA,QACA,aADA,GACA,IADA,CACA,aADA;AAGA,IAAA,aAAA;AACA;AA1WA,CAAA","sourcesContent":["<template>\r\n  <div class=\"dv-scroll-board\" :ref=\"ref\">\r\n    <div class=\"header\" v-if=\"header.length && mergedConfig\" :style=\"`background-color: ${mergedConfig.headerBGC};`\">\r\n      <div\r\n        class=\"header-item\"\r\n        v-for=\"(headerItem, i) in header\"\r\n        :key=\"`${headerItem}${i}`\"\r\n        :style=\"`\r\n          height: ${mergedConfig.headerHeight}px;\r\n          line-height: ${mergedConfig.headerHeight}px;\r\n          width: ${widths[i]}px;\r\n        `\"\r\n        :align=\"aligns[i]\"\r\n        v-html=\"headerItem\"\r\n      />\r\n    </div>\r\n\r\n    <div\r\n      v-if=\"mergedConfig\"\r\n      class=\"rows\"\r\n      :style=\"`height: ${height - (header.length ? mergedConfig.headerHeight : 0)}px;`\"\r\n    >\r\n      <div\r\n        class=\"row-item\"\r\n        v-for=\"(row, ri) in rows\"\r\n        :key=\"`${row.toString()}${row.scroll}`\"\r\n        :style=\"`\r\n          height: ${heights[ri]}px;\r\n          line-height: ${heights[ri]}px;\r\n          background-color: ${mergedConfig[row.rowIndex % 2 === 0 ? 'evenRowBGC' : 'oddRowBGC']};\r\n        `\"\r\n      >\r\n        <div\r\n          class=\"ceil\"\r\n          v-for=\"(ceil, ci) in row.ceils\"\r\n          :key=\"`${ceil}${ri}${ci}`\"\r\n          :style=\"`width: ${widths[ci]}px;`\"\r\n          :align=\"aligns[ci]\"\r\n          v-html=\"ceil\"\r\n          @click=\"emitEvent('click', ri, ci, row, ceil)\"\r\n          @mouseenter=\"handleHover(true, ri, ci, row, ceil)\"\r\n          @mouseleave=\"handleHover(false)\"\r\n        />\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport autoResize from '../../../mixin/autoResize'\r\n\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nexport default {\r\n  name: 'DvScrollBoard',\r\n  mixins: [autoResize],\r\n  props: {\r\n    config: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      ref: 'scroll-board',\r\n\r\n      defaultConfig: {\r\n        /**\r\n         * @description Board header\r\n         * @type {Array<String>}\r\n         * @default header = []\r\n         * @example header = ['column1', 'column2', 'column3']\r\n         */\r\n        header: [],\r\n        /**\r\n         * @description Board data\r\n         * @type {Array<Array>}\r\n         * @default data = []\r\n         */\r\n        data: [],\r\n        /**\r\n         * @description Row num\r\n         * @type {Number}\r\n         * @default rowNum = 5\r\n         */\r\n        rowNum: 5,\r\n        /**\r\n         * @description Header background color\r\n         * @type {String}\r\n         * @default headerBGC = '#00BAFF'\r\n         */\r\n        headerBGC: '#00BAFF',\r\n        /**\r\n         * @description Odd row background color\r\n         * @type {String}\r\n         * @default oddRowBGC = '#003B51'\r\n         */\r\n        oddRowBGC: '#003B51',\r\n        /**\r\n         * @description Even row background color\r\n         * @type {String}\r\n         * @default evenRowBGC = '#003B51'\r\n         */\r\n        evenRowBGC: '#0A2732',\r\n        /**\r\n         * @description Scroll wait time\r\n         * @type {Number}\r\n         * @default waitTime = 2000\r\n         */\r\n        waitTime: 2000,\r\n        /**\r\n         * @description Header height\r\n         * @type {Number}\r\n         * @default headerHeight = 35\r\n         */\r\n        headerHeight: 35,\r\n        /**\r\n         * @description Column width\r\n         * @type {Array<Number>}\r\n         * @default columnWidth = []\r\n         */\r\n        columnWidth: [],\r\n        /**\r\n         * @description Column align\r\n         * @type {Array<String>}\r\n         * @default align = []\r\n         * @example align = ['left', 'center', 'right']\r\n         */\r\n        align: [],\r\n        /**\r\n         * @description Show index\r\n         * @type {Boolean}\r\n         * @default index = false\r\n         */\r\n        index: false,\r\n        /**\r\n         * @description index Header\r\n         * @type {String}\r\n         * @default indexHeader = '#'\r\n         */\r\n        indexHeader: '#',\r\n        /**\r\n         * @description Carousel type\r\n         * @type {String}\r\n         * @default carousel = 'single'\r\n         * @example carousel = 'single' | 'page'\r\n         */\r\n        carousel: 'single',\r\n        /**\r\n         * @description Pause scroll when mouse hovered\r\n         * @type {Boolean}\r\n         * @default hoverPause = true\r\n         * @example hoverPause = true | false\r\n         */\r\n        hoverPause: true\r\n      },\r\n\r\n      mergedConfig: null,\r\n\r\n      header: [],\r\n\r\n      rowsData: [],\r\n\r\n      rows: [],\r\n\r\n      widths: [],\r\n\r\n      heights: [],\r\n\r\n      avgHeight: 0,\r\n\r\n      aligns: [],\r\n\r\n      animationIndex: 0,\r\n\r\n      animationHandler: '',\r\n\r\n      updater: 0,\r\n\r\n      needCalc: false\r\n    }\r\n  },\r\n  watch: {\r\n    config () {\r\n      const { stopAnimation, calcData } = this\r\n\r\n      stopAnimation()\r\n\r\n      this.animationIndex = 0\r\n\r\n      calcData()\r\n    }\r\n  },\r\n  methods: {\r\n    handleHover(enter, ri, ci, row, ceil){\r\n      const { mergedConfig, emitEvent, stopAnimation, animation } = this\r\n\r\n      if (enter) emitEvent('mouseover', ri, ci, row, ceil)\r\n      if (!mergedConfig.hoverPause) return\r\n\r\n      if (enter) {\r\n        stopAnimation()\r\n      } else {\r\n        animation(true)\r\n      }\r\n    },\r\n    afterAutoResizeMixinInit () {\r\n      const { calcData } = this\r\n\r\n      calcData()\r\n    },\r\n    onResize () {\r\n      const { mergedConfig, calcWidths, calcHeights } = this\r\n\r\n      if (!mergedConfig) return\r\n\r\n      calcWidths()\r\n\r\n      calcHeights()\r\n    },\r\n    calcData () {\r\n      const { mergeConfig, calcHeaderData, calcRowsData } = this\r\n\r\n      mergeConfig()\r\n\r\n      calcHeaderData()\r\n\r\n      calcRowsData()\r\n\r\n      const { calcWidths, calcHeights, calcAligns } = this\r\n\r\n      calcWidths()\r\n\r\n      calcHeights()\r\n\r\n      calcAligns()\r\n\r\n      const { animation } = this\r\n\r\n      animation(true)\r\n    },\r\n    mergeConfig () {\r\n      let { config, defaultConfig } = this\r\n\r\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\r\n    },\r\n    calcHeaderData () {\r\n      let { header, index, indexHeader} = this.mergedConfig\r\n\r\n      if (!header.length) {\r\n        this.header = []\r\n\r\n        return\r\n      }\r\n\r\n      header = [...header]\r\n\r\n      if (index) header.unshift(indexHeader)\r\n\r\n      this.header = header\r\n    },\r\n    calcRowsData () {\r\n      let { data, index, headerBGC, rowNum } = this.mergedConfig\r\n\r\n      if (index) {\r\n        data = data.map((row, i) => {\r\n          row = [...row]\r\n\r\n          const indexTag = `<span class=\"index\" style=\"background-color: ${headerBGC};\">${i + 1}</span>`\r\n\r\n          row.unshift(indexTag)\r\n\r\n          return row\r\n        })\r\n      }\r\n\r\n      data = data.map((ceils, i) => ({ ceils, rowIndex: i }))\r\n\r\n      const rowLength = data.length\r\n\r\n      if (rowLength > rowNum && rowLength < 2 * rowNum) {\r\n        data = [...data, ...data]\r\n      }\r\n\r\n      data = data.map((d, i) => ({ ...d, scroll: i }))\r\n\r\n      this.rowsData = data\r\n      this.rows = data\r\n    },\r\n    calcWidths () {\r\n      const { width, mergedConfig, rowsData } = this\r\n\r\n      const { columnWidth, header } = mergedConfig\r\n\r\n      const usedWidth = columnWidth.reduce((all, w) => all + w, 0)\r\n\r\n      let columnNum = 0\r\n      if (rowsData[0]) {\r\n        columnNum = rowsData[0].ceils.length\r\n      } else if (header.length) {\r\n        columnNum = header.length\r\n      }\r\n\r\n      const avgWidth = (width - usedWidth) / (columnNum - columnWidth.length)\r\n\r\n      const widths = new Array(columnNum).fill(avgWidth)\r\n\r\n      this.widths = deepMerge(widths, columnWidth)\r\n    },\r\n    calcHeights (onresize = false) {\r\n      const { height, mergedConfig, header } = this\r\n\r\n      const { headerHeight, rowNum, data } = mergedConfig\r\n\r\n      let allHeight = height\r\n\r\n      if (header.length) allHeight -= headerHeight\r\n\r\n      const avgHeight = allHeight / rowNum\r\n\r\n      this.avgHeight = avgHeight\r\n\r\n      if (!onresize) this.heights = new Array(data.length).fill(avgHeight)\r\n    },\r\n    calcAligns () {\r\n      const { header, mergedConfig } = this\r\n\r\n      const columnNum = header.length\r\n\r\n      let aligns = new Array(columnNum).fill('left')\r\n\r\n      const { align } = mergedConfig\r\n\r\n      this.aligns = deepMerge(aligns, align)\r\n    },\r\n    async animation (start = false) {\r\n      const { needCalc, calcHeights, calcRowsData } = this\r\n\r\n      if (needCalc) {\r\n        calcRowsData()\r\n        calcHeights()\r\n        this.needCalc = false\r\n      }\r\n\r\n      let { avgHeight, animationIndex, mergedConfig, rowsData, animation, updater } = this\r\n\r\n      const { waitTime, carousel, rowNum } = mergedConfig\r\n\r\n      const rowLength = rowsData.length\r\n\r\n      if (rowNum >= rowLength) return\r\n\r\n      if (start) {\r\n        await new Promise(resolve => setTimeout(resolve, waitTime))\r\n        if (updater !== this.updater) return\r\n      }\r\n\r\n      const animationNum = carousel === 'single' ? 1 : rowNum\r\n\r\n      let rows = rowsData.slice(animationIndex)\r\n      rows.push(...rowsData.slice(0, animationIndex))\r\n\r\n      this.rows = rows.slice(0, carousel === 'page' ? rowNum * 2 : rowNum + 1)\r\n      this.heights = new Array(rowLength).fill(avgHeight)\r\n\r\n      await new Promise(resolve => setTimeout(resolve, 300))\r\n      if (updater !== this.updater) return\r\n\r\n      this.heights.splice(0, animationNum, ...new Array(animationNum).fill(0))\r\n\r\n      animationIndex += animationNum\r\n\r\n      const back = animationIndex - rowLength\r\n      if (back >= 0) animationIndex = back\r\n\r\n      this.animationIndex = animationIndex\r\n      this.animationHandler = setTimeout(animation, waitTime - 300)\r\n    },\r\n    stopAnimation () {\r\n      const { animationHandler, updater } = this\r\n\r\n      this.updater = (updater + 1) % 999999\r\n\r\n      if (!animationHandler) return\r\n\r\n      clearTimeout(animationHandler)\r\n    },\r\n    emitEvent (type, ri, ci, row, ceil) {\r\n      const { ceils, rowIndex } = row\r\n\r\n      this.$emit(type, {\r\n        row: ceils,\r\n        ceil,\r\n        rowIndex,\r\n        columnIndex: ci\r\n      })\r\n    },\r\n    updateRows(rows, animationIndex) {\r\n      const { mergedConfig, animationHandler, animation } = this\r\n\r\n      this.mergedConfig = {\r\n        ...mergedConfig,\r\n        data: [...rows]\r\n      }\r\n\r\n      this.needCalc = true\r\n\r\n      if (typeof animationIndex === 'number') this.animationIndex = animationIndex\r\n      if (!animationHandler) animation(true)\r\n    }\r\n  },\r\n  destroyed () {\r\n    const { stopAnimation } = this\r\n\r\n    stopAnimation()\r\n  }\r\n}\r\n</script>"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/scrollBoard/src"}]}