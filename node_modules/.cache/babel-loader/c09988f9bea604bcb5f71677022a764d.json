{"remainingRequest":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\thread-loader\\dist\\cjs.js!F:\\mp-project\\taigongthtm-project-front\\node_modules\\babel-loader\\lib\\index.js!F:\\mp-project\\taigongthtm-project-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\mp-project\\taigongthtm-project-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\mp-project\\taigongthtm-project-front\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChart\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChart\\src\\main.vue","mtime":1648453569313},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648453574266},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1648453592739},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1648453572806},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648453574266},{"path":"F:\\mp-project\\taigongthtm-project-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1648453593268}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuJA,SAAA,SAAA,QAAA,kCAAA;AAEA,SAAA,SAAA,QAAA,qCAAA;AAEA,SAAA,YAAA,EAAA,gBAAA,EAAA,IAAA,QAAA,qBAAA;AAEA,OAAA,UAAA,MAAA,2BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,MAAA,EAAA,CAAA,UAAA,CAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AALA,GAHA;AAaA,EAAA,IAbA,kBAaA;AACA,QAAA,EAAA,GAAA,IAAA,EAAA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,kBADA;AAEA,MAAA,MAAA,EAAA,IAAA,CAAA,MAAA,EAFA;AAGA,MAAA,MAAA,4BAAA,EAAA,CAHA;AAIA,MAAA,YAAA,2BAAA,EAAA,CAJA;AAKA,MAAA,UAAA,wBAAA,EAAA,CALA;AAMA,MAAA,WAAA,yBAAA,EAAA,CANA;AAQA,MAAA,aAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,WAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CANA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,MAAA,EAAA,EAbA;;AAcA;AACA;AACA;AACA;AACA;AACA,QAAA,SAAA,EAAA,CAnBA;;AAoBA;AACA;AACA;AACA;AACA;AACA,QAAA,UAAA,EAAA,yBAzBA;;AA0BA;AACA;AACA;AACA;AACA;AACA,QAAA,YAAA,EAAA,SA/BA;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,CAAA,EAAA,CAAA,GAtCA;;AAuCA;AACA;AACA;AACA;AACA;AACA,QAAA,SAAA,EAAA,CA5CA;;AA6CA;AACA;AACA;AACA;AACA;AACA,QAAA,aAAA,EAAA,GAlDA;;AAmDA;AACA;AACA;AACA;AACA;AACA,QAAA,QAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAxDA;;AAyDA;AACA;AACA;AACA;AACA;AACA,QAAA,QAAA,EAAA,IA9DA;;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,QAAA,EAAA,EArEA;;AAsEA;AACA;AACA;AACA;AACA,QAAA,IAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA,UAAA,MAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CANA;;AAOA;AACA;AACA;AACA;AACA;AACA,UAAA,KAAA,EAAA,SAZA;;AAaA;AACA;AACA;AACA;AACA;AACA,UAAA,QAAA,EAAA;AAlBA,SA1EA;;AA8FA;AACA;AACA;AACA;AACA,QAAA,IAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAA,IAAA,EAAA,IAPA;;AAQA;AACA;AACA;AACA;AACA;AACA,UAAA,QAAA,EAAA,EAbA;;AAcA;AACA;AACA;AACA;AACA;AACA,UAAA,KAAA,EAAA,SAnBA;;AAoBA;AACA;AACA;AACA;AACA;AACA,UAAA,MAAA,EAAA;AAzBA,SAlGA;;AA6HA;AACA;AACA;AACA;AACA,QAAA,cAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA,UAAA,KAAA,EAAA,EANA;;AAOA;AACA;AACA;AACA;AACA;AACA,UAAA,MAAA,EAAA,EAZA;;AAaA;AACA;AACA;AACA;AACA;AACA,UAAA,GAAA,EAAA;AAlBA,SAjIA;;AAqJA;AACA;AACA;AACA;AACA;AACA,QAAA,SAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA,UAAA,KAAA,EAAA,EANA;;AAOA;AACA;AACA;AACA;AACA;AACA,UAAA,MAAA,EAAA,EAZA;;AAaA;AACA;AACA;AACA;AACA;AACA,UAAA,GAAA,EAAA;AAlBA;AA1JA,OARA;AAwLA,MAAA,YAAA,EAAA,IAxLA;AA0LA,MAAA,KAAA,EAAA,EA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","sourcesContent":["<template>\r\n  <div\r\n    class=\"dv-flyline-chart\"\r\n    ref=\"dv-flyline-chart\"\r\n    :style=\"`background-image: url(${mergedConfig ? mergedConfig.bgImgUrl : ''})`\"\r\n    @click=\"consoleClickPos\"\r\n  >\r\n    <svg v-if=\"mergedConfig\" :width=\"width\" :height=\"height\">\r\n      <defs>\r\n        <radialGradient\r\n          :id=\"gradientId\"\r\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\r\n        >\r\n          <stop\r\n            offset=\"0%\" stop-color=\"#fff\"\r\n            stop-opacity=\"1\"\r\n          />\r\n          <stop\r\n            offset=\"100%\" stop-color=\"#fff\"\r\n            stop-opacity=\"0\"\r\n          />\r\n        </radialGradient>\r\n\r\n        <radialGradient\r\n          :id=\"gradient2Id\"\r\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\r\n        >\r\n          <stop\r\n            offset=\"0%\" stop-color=\"#fff\"\r\n            stop-opacity=\"0\"\r\n          />\r\n          <stop\r\n            offset=\"100%\" stop-color=\"#fff\"\r\n            stop-opacity=\"1\"\r\n          />\r\n        </radialGradient>\r\n\r\n        <circle\r\n          v-if=\"paths[0]\"\r\n          :id=\"`circle${paths[0].toString()}`\"\r\n          :cx=\"paths[0][2][0]\"\r\n          :cy=\"paths[0][2][1]\"\r\n        >\r\n          <animate\r\n            attributeName=\"r\"\r\n            :values=\"`1;${mergedConfig.halo.radius}`\"\r\n            :dur=\"mergedConfig.halo.duration / 10 + 's'\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animate\r\n            attributeName=\"opacity\"\r\n            values=\"1;0\"\r\n            :dur=\"mergedConfig.halo.duration / 10 + 's'\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </circle>\r\n      </defs>\r\n\r\n      <image\r\n        v-if=\"paths[0]\"\r\n        :xlink:href=\"mergedConfig.centerPointImg.url\"\r\n        :width=\"mergedConfig.centerPointImg.width\"\r\n        :height=\"mergedConfig.centerPointImg.height\"\r\n        :x=\"paths[0][2][0] - mergedConfig.centerPointImg.width / 2\"\r\n        :y=\"paths[0][2][1] - mergedConfig.centerPointImg.height / 2\"\r\n      />\r\n\r\n      <mask :id=\"`maskhalo${paths[0].toString()}`\">\r\n        <use\r\n          v-if=\"paths[0]\"\r\n          :xlink:href=\"`#circle${paths[0].toString()}`\"\r\n          :fill=\"`url(#${gradient2Id})`\"\r\n        />\r\n      </mask>\r\n\r\n      <use\r\n        v-if=\"paths[0] && mergedConfig.halo.show\"\r\n        :xlink:href=\"`#circle${paths[0].toString()}`\"\r\n        :fill=\"mergedConfig.halo.color\"\r\n        :mask=\"`url(#maskhalo${paths[0].toString()})`\"\r\n      />\r\n\r\n      <g\r\n        v-for=\"(path, i) in paths\"\r\n        :key=\"i\"\r\n      >\r\n        <defs>\r\n          <path\r\n            :id=\"`path${path.toString()}`\"\r\n            :ref=\"`path${i}`\"\r\n            :d=\"`M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\"\r\n            fill=\"transparent\"\r\n          />\r\n        </defs>\r\n\r\n        <use\r\n          :xlink:href=\"`#path${path.toString()}`\"\r\n          :stroke-width=\"mergedConfig.lineWidth\"\r\n          :stroke=\"mergedConfig.orbitColor\"\r\n        />\r\n\r\n        <use\r\n          v-if=\"lengths[i]\"\r\n          :xlink:href=\"`#path${path.toString()}`\"\r\n          :stroke-width=\"mergedConfig.lineWidth\"\r\n          :stroke=\"mergedConfig.flylineColor\"\r\n          :mask=\"`url(#mask${unique}${path.toString()})`\"\r\n        >\r\n          <animate\r\n            attributeName=\"stroke-dasharray\"\r\n            :from=\"`0, ${lengths[i]}`\"\r\n            :to=\"`${lengths[i]}, 0`\"\r\n            :dur=\"times[i] || 0\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </use>\r\n\r\n        <mask :id=\"`mask${unique}${path.toString()}`\">\r\n          <circle cx=\"0\" cy=\"0\" :r=\"mergedConfig.flylineRadius\" :fill=\"`url(#${gradientId})`\">\r\n            <animateMotion\r\n              :dur=\"times[i] || 0\"\r\n              :path=\"`M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\"\r\n              rotate=\"auto\"\r\n              repeatCount=\"indefinite\"\r\n            />\r\n          </circle>\r\n        </mask>\r\n\r\n        <image\r\n          :xlink:href=\"mergedConfig.pointsImg.url\"\r\n          :width=\"mergedConfig.pointsImg.width\"\r\n          :height=\"mergedConfig.pointsImg.height\"\r\n          :x=\"path[0][0] - mergedConfig.pointsImg.width / 2\"\r\n          :y=\"path[0][1] - mergedConfig.pointsImg.height / 2\"\r\n        />\r\n\r\n        <text\r\n          :style=\"`fontSize:${mergedConfig.text.fontSize}px;`\"\r\n          :fill=\"mergedConfig.text.color\"\r\n          :x=\"path[0][0] + mergedConfig.text.offset[0]\"\r\n          :y=\"path[0][1] + mergedConfig.text.offset[1]\"\r\n        >\r\n          {{ texts[i] }}\r\n        </text>\r\n\r\n      </g>\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\r\n\r\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\r\n\r\nimport { randomExtend, getPointDistance, uuid } from '../../../util/index'\r\n\r\nimport autoResize from '../../../mixin/autoResize'\r\n\r\nexport default {\r\n  name: 'DvFlylineChart',\r\n  mixins: [autoResize],\r\n  props: {\r\n    config: {\r\n      type: Object,\r\n      default: () => ({})\r\n    },\r\n    dev: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data () {\r\n    const id = uuid()\r\n    return {\r\n      ref: 'dv-flyline-chart',\r\n      unique: Math.random(),\r\n      maskId: `flyline-mask-id-${id}`,\r\n      maskCircleId: `mask-circle-id-${id}`,\r\n      gradientId: `gradient-id-${id}`,\r\n      gradient2Id: `gradient2-id-${id}`,\r\n\r\n      defaultConfig: {\r\n        /**\r\n         * @description Flyline chart center point\r\n         * @type {Array<Number>}\r\n         * @default centerPoint = [0, 0]\r\n         */\r\n        centerPoint: [0, 0],\r\n        /**\r\n         * @description Flyline start points\r\n         * @type {Array<Array<Number>>}\r\n         * @default points = []\r\n         * @example points = [[10, 10], [100, 100]]\r\n         */\r\n        points: [],\r\n        /**\r\n         * @description Flyline width\r\n         * @type {Number}\r\n         * @default lineWidth = 1\r\n         */\r\n        lineWidth: 1,\r\n        /**\r\n         * @description Orbit color\r\n         * @type {String}\r\n         * @default orbitColor = 'rgba(103, 224, 227, .2)'\r\n         */\r\n        orbitColor: 'rgba(103, 224, 227, .2)',\r\n        /**\r\n         * @description Flyline color\r\n         * @type {String}\r\n         * @default orbitColor = '#ffde93'\r\n         */\r\n        flylineColor: '#ffde93',\r\n        /**\r\n         * @description K value\r\n         * @type {Number}\r\n         * @default k = -0.5\r\n         * @example k = -1 ~ 1\r\n         */\r\n        k: -0.5,\r\n        /**\r\n         * @description Flyline curvature\r\n         * @type {Number}\r\n         * @default curvature = 5\r\n         */\r\n        curvature: 5,\r\n        /**\r\n         * @description Flyline radius\r\n         * @type {Number}\r\n         * @default flylineRadius = 100\r\n         */\r\n        flylineRadius: 100,\r\n        /**\r\n         * @description Flyline animation duration\r\n         * @type {Array<Number>}\r\n         * @default duration = [20, 30]\r\n         */\r\n        duration: [20, 30],\r\n        /**\r\n         * @description Relative points position\r\n         * @type {Boolean}\r\n         * @default relative = true\r\n         */\r\n        relative: true,\r\n        /**\r\n         * @description Back ground image url\r\n         * @type {String}\r\n         * @default bgImgUrl = ''\r\n         * @example bgImgUrl = './img/bg.jpg'\r\n         */\r\n        bgImgUrl: '',\r\n        /**\r\n         * @description Text configuration\r\n         * @type {Object}\r\n         */\r\n        text: {\r\n          /**\r\n           * @description Text offset\r\n           * @type {Array<Number>}\r\n           * @default offset = [0, 15]\r\n           */\r\n          offset: [0, 15],\r\n          /**\r\n           * @description Text color\r\n           * @type {String}\r\n           * @default color = '#ffdb5c'\r\n           */\r\n          color: '#ffdb5c',\r\n          /**\r\n           * @description Text font size\r\n           * @type {Number}\r\n           * @default fontSize = 12\r\n           */\r\n          fontSize: 12\r\n        },\r\n        /**\r\n         * @description Halo configuration\r\n         * @type {Object}\r\n         */\r\n        halo: {\r\n          /**\r\n           * @description Weather to show halo\r\n           * @type {Boolean}\r\n           * @default show = true\r\n           * @example show = true | false\r\n           */\r\n          show: true,\r\n          /**\r\n           * @description Halo animation duration (10 = 1s)\r\n           * @type {Number}\r\n           * @default duration = 30\r\n           */\r\n          duration: 30,\r\n          /**\r\n           * @description Halo color\r\n           * @type {String}\r\n           * @default color = '#fb7293'\r\n           */\r\n          color: '#fb7293',\r\n          /**\r\n           * @description Halo max radius\r\n           * @type {Number}\r\n           * @default radius = 120\r\n           */\r\n          radius: 120\r\n        },\r\n        /**\r\n         * @description Center point img configuration\r\n         * @type {Object}\r\n         */\r\n        centerPointImg: {\r\n          /**\r\n           * @description Center point img width\r\n           * @type {Number}\r\n           * @default width = 40\r\n           */\r\n          width: 40,\r\n          /**\r\n           * @description Center point img height\r\n           * @type {Number}\r\n           * @default height = 40\r\n           */\r\n          height: 40,\r\n          /**\r\n           * @description Center point img url\r\n           * @type {String}\r\n           * @default url = ''\r\n           */\r\n          url: ''\r\n        },\r\n        /**\r\n         * @description Points img configuration\r\n         * @type {Object}\r\n         * @default radius = 120\r\n         */\r\n        pointsImg: {\r\n          /**\r\n           * @description Points img width\r\n           * @type {Number}\r\n           * @default width = 15\r\n           */\r\n          width: 15,\r\n          /**\r\n           * @description Points img height\r\n           * @type {Number}\r\n           * @default height = 15\r\n           */\r\n          height: 15,\r\n          /**\r\n           * @description Points img url\r\n           * @type {String}\r\n           * @default url = ''\r\n           */\r\n          url: ''\r\n        }\r\n      },\r\n\r\n      mergedConfig: null,\r\n\r\n      paths: [],\r\n      lengths: [],\r\n      times: [],\r\n      texts: []\r\n    }\r\n  },\r\n  watch: {\r\n    config () {\r\n      const { calcData } = this\r\n\r\n      calcData()\r\n    }\r\n  },\r\n  methods: {\r\n    afterAutoResizeMixinInit () {\r\n      const { calcData } = this\r\n\r\n      calcData()\r\n    },\r\n    onResize () {\r\n      const { calcData } = this\r\n\r\n      calcData()\r\n    },\r\n    async calcData () {\r\n      const { mergeConfig, createFlylinePaths, calcLineLengths } = this\r\n\r\n      mergeConfig()\r\n\r\n      createFlylinePaths()\r\n\r\n      await calcLineLengths()\r\n\r\n      const { calcTimes, calcTexts } = this\r\n\r\n      calcTimes()\r\n\r\n      calcTexts()\r\n    },\r\n    mergeConfig () {\r\n      let { config, defaultConfig } = this\r\n\r\n      const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\r\n\r\n      const { points } = mergedConfig\r\n\r\n      mergedConfig.points = points.map(item => {\r\n        if (item instanceof Array) {\r\n          return { position: item, text: '' }\r\n        }\r\n\r\n        return item\r\n      })\r\n\r\n      this.mergedConfig = mergedConfig\r\n    },\r\n    createFlylinePaths () {\r\n      const { getPath, mergedConfig, width, height } = this\r\n\r\n      let { centerPoint, points, relative } = mergedConfig\r\n\r\n      points = points.map(({ position }) => position)\r\n\r\n      if (relative) {\r\n        centerPoint = [width * centerPoint[0], height * centerPoint[1]]\r\n        points = points.map(([x, y]) => [width * x, height * y])\r\n      }\r\n\r\n      this.paths = points.map(point => getPath(centerPoint, point))\r\n    },\r\n    getPath (center, point) {\r\n      const { getControlPoint } = this\r\n\r\n      const controlPoint = getControlPoint(center, point)\r\n\r\n      return [point, controlPoint, center]\r\n    },\r\n    getControlPoint ([sx, sy], [ex, ey]) {\r\n      const { getKLinePointByx, mergedConfig } = this\r\n\r\n      const { curvature, k } = mergedConfig\r\n\r\n      const [mx, my] = [(sx + ex) / 2, (sy + ey) / 2]\r\n\r\n      const distance = getPointDistance([sx, sy], [ex, ey])\r\n\r\n      const targetLength = distance / curvature\r\n      const disDived = targetLength / 2\r\n\r\n      let [dx, dy] = [mx, my]\r\n\r\n      do {\r\n        dx += disDived\r\n        dy = getKLinePointByx(k, [mx, my], dx)[1]\r\n      } while (getPointDistance([mx, my], [dx, dy]) < targetLength)\r\n\r\n      return [dx, dy]\r\n    },\r\n    getKLinePointByx (k, [lx, ly], x) {\r\n      const y = ly - k * lx + k * x\r\n\r\n      return [x, y]\r\n    },\r\n    async calcLineLengths () {\r\n      const { $nextTick, paths, $refs } = this\r\n\r\n      await $nextTick()\r\n\r\n      this.lengths = paths.map((foo, i) => $refs[`path${i}`][0].getTotalLength())\r\n    },\r\n    calcTimes () {\r\n      const { duration, points } = this.mergedConfig\r\n\r\n      this.times = points.map(foo => randomExtend(...duration) / 10)\r\n    },\r\n    calcTexts () {\r\n      const { points } = this.mergedConfig\r\n\r\n      this.texts = points.map(({ text }) => text)\r\n    },\r\n    consoleClickPos ({ offsetX, offsetY }) {\r\n      const { width, height, dev } = this\r\n\r\n      if (!dev) return\r\n\r\n      const relativeX = (offsetX / width).toFixed(2)\r\n      const relativeY = (offsetY / height).toFixed(2)\r\n\r\n      console.warn(`dv-flyline-chart DEV: \\n Click Position is [${offsetX}, ${offsetY}] \\n Relative Position is [${relativeX}, ${relativeY}]`)\r\n    }\r\n  }\r\n}\r\n</script>"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/flylineChart/src"}]}